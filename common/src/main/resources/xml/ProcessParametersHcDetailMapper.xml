<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.ProcessParametersHcDetailMapper" >
  <resultMap id="BaseResultMap" type="com.jinchi.common.domain.ProcessParametersHcDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="process_code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="production_code" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="flow_standard1" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="flow_bias1" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="flow_standard2" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="flow_bias2" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="rotate_speed_standard" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rotate_speed_bias" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="temperature_standard" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="temperature_bias" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="basicity_standard" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="basicity_bias" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="solid_containing_content_standard" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="solid_containing_content_bias" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="nitrogen_flow_standard" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="nitrogen_flow_bias" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="size_d70" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="size_d30_standard" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="size_d30_bias" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="size_d90" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="comment" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ni" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="co" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="mn" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, process_code, production_code, flow_standard1, flow_bias1, flow_standard2, 
    flow_bias2, rotate_speed_standard, rotate_speed_bias, temperature_standard, temperature_bias, 
    basicity_standard, basicity_bias, solid_containing_content_standard, solid_containing_content_bias, 
    nitrogen_flow_standard, nitrogen_flow_bias, size_d70, size_d30_standard, size_d30_bias, 
    size_d90, comment, ni, co, mn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinchi.common.domain.ProcessParametersHcDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from process_parameters_hc_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jinchi.common.domain.ProcessParametersHcDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from process_parameters_hc_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.jinchi.common.domain.ProcessParametersHcDetail" useGeneratedKeys="true" keyProperty="code" keyColumn="code">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into process_parameters_hc_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="processCode != null" >
        process_code,
      </if>
      <if test="productionCode != null" >
        production_code,
      </if>
      <if test="flowStandard1 != null" >
        flow_standard1,
      </if>
      <if test="flowBias1 != null" >
        flow_bias1,
      </if>
      <if test="flowStandard2 != null" >
        flow_standard2,
      </if>
      <if test="flowBias2 != null" >
        flow_bias2,
      </if>
      <if test="rotateSpeedStandard != null" >
        rotate_speed_standard,
      </if>
      <if test="rotateSpeedBias != null" >
        rotate_speed_bias,
      </if>
      <if test="temperatureStandard != null" >
        temperature_standard,
      </if>
      <if test="temperatureBias != null" >
        temperature_bias,
      </if>
      <if test="basicityStandard != null" >
        basicity_standard,
      </if>
      <if test="basicityBias != null" >
        basicity_bias,
      </if>
      <if test="solidContainingContentStandard != null" >
        solid_containing_content_standard,
      </if>
      <if test="solidContainingContentBias != null" >
        solid_containing_content_bias,
      </if>
      <if test="nitrogenFlowStandard != null" >
        nitrogen_flow_standard,
      </if>
      <if test="nitrogenFlowBias != null" >
        nitrogen_flow_bias,
      </if>
      <if test="sizeD70 != null" >
        size_d70,
      </if>
      <if test="sizeD30Standard != null" >
        size_d30_standard,
      </if>
      <if test="sizeD30Bias != null" >
        size_d30_bias,
      </if>
      <if test="sizeD90 != null" >
        size_d90,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="ni != null" >
        ni,
      </if>
      <if test="co != null" >
        co,
      </if>
      <if test="mn != null" >
        mn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=BIGINT},
      </if>
      <if test="processCode != null" >
        #{processCode,jdbcType=BIGINT},
      </if>
      <if test="productionCode != null" >
        #{productionCode,jdbcType=SMALLINT},
      </if>
      <if test="flowStandard1 != null" >
        #{flowStandard1,jdbcType=REAL},
      </if>
      <if test="flowBias1 != null" >
        #{flowBias1,jdbcType=REAL},
      </if>
      <if test="flowStandard2 != null" >
        #{flowStandard2,jdbcType=REAL},
      </if>
      <if test="flowBias2 != null" >
        #{flowBias2,jdbcType=REAL},
      </if>
      <if test="rotateSpeedStandard != null" >
        #{rotateSpeedStandard,jdbcType=INTEGER},
      </if>
      <if test="rotateSpeedBias != null" >
        #{rotateSpeedBias,jdbcType=INTEGER},
      </if>
      <if test="temperatureStandard != null" >
        #{temperatureStandard,jdbcType=REAL},
      </if>
      <if test="temperatureBias != null" >
        #{temperatureBias,jdbcType=REAL},
      </if>
      <if test="basicityStandard != null" >
        #{basicityStandard,jdbcType=REAL},
      </if>
      <if test="basicityBias != null" >
        #{basicityBias,jdbcType=REAL},
      </if>
      <if test="solidContainingContentStandard != null" >
        #{solidContainingContentStandard,jdbcType=INTEGER},
      </if>
      <if test="solidContainingContentBias != null" >
        #{solidContainingContentBias,jdbcType=INTEGER},
      </if>
      <if test="nitrogenFlowStandard != null" >
        #{nitrogenFlowStandard,jdbcType=INTEGER},
      </if>
      <if test="nitrogenFlowBias != null" >
        #{nitrogenFlowBias,jdbcType=INTEGER},
      </if>
      <if test="sizeD70 != null" >
        #{sizeD70,jdbcType=VARCHAR},
      </if>
      <if test="sizeD30Standard != null" >
        #{sizeD30Standard,jdbcType=REAL},
      </if>
      <if test="sizeD30Bias != null" >
        #{sizeD30Bias,jdbcType=REAL},
      </if>
      <if test="sizeD90 != null" >
        #{sizeD90,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="ni != null" >
        #{ni,jdbcType=REAL},
      </if>
      <if test="co != null" >
        #{co,jdbcType=REAL},
      </if>
      <if test="mn != null" >
        #{mn,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinchi.common.domain.ProcessParametersHcDetailExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from process_parameters_hc_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update process_parameters_hc_detail
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=BIGINT},
      </if>
      <if test="record.processCode != null" >
        process_code = #{record.processCode,jdbcType=BIGINT},
      </if>
      <if test="record.productionCode != null" >
        production_code = #{record.productionCode,jdbcType=SMALLINT},
      </if>
      <if test="record.flowStandard1 != null" >
        flow_standard1 = #{record.flowStandard1,jdbcType=REAL},
      </if>
      <if test="record.flowBias1 != null" >
        flow_bias1 = #{record.flowBias1,jdbcType=REAL},
      </if>
      <if test="record.flowStandard2 != null" >
        flow_standard2 = #{record.flowStandard2,jdbcType=REAL},
      </if>
      <if test="record.flowBias2 != null" >
        flow_bias2 = #{record.flowBias2,jdbcType=REAL},
      </if>
      <if test="record.rotateSpeedStandard != null" >
        rotate_speed_standard = #{record.rotateSpeedStandard,jdbcType=INTEGER},
      </if>
      <if test="record.rotateSpeedBias != null" >
        rotate_speed_bias = #{record.rotateSpeedBias,jdbcType=INTEGER},
      </if>
      <if test="record.temperatureStandard != null" >
        temperature_standard = #{record.temperatureStandard,jdbcType=REAL},
      </if>
      <if test="record.temperatureBias != null" >
        temperature_bias = #{record.temperatureBias,jdbcType=REAL},
      </if>
      <if test="record.basicityStandard != null" >
        basicity_standard = #{record.basicityStandard,jdbcType=REAL},
      </if>
      <if test="record.basicityBias != null" >
        basicity_bias = #{record.basicityBias,jdbcType=REAL},
      </if>
      <if test="record.solidContainingContentStandard != null" >
        solid_containing_content_standard = #{record.solidContainingContentStandard,jdbcType=INTEGER},
      </if>
      <if test="record.solidContainingContentBias != null" >
        solid_containing_content_bias = #{record.solidContainingContentBias,jdbcType=INTEGER},
      </if>
      <if test="record.nitrogenFlowStandard != null" >
        nitrogen_flow_standard = #{record.nitrogenFlowStandard,jdbcType=INTEGER},
      </if>
      <if test="record.nitrogenFlowBias != null" >
        nitrogen_flow_bias = #{record.nitrogenFlowBias,jdbcType=INTEGER},
      </if>
      <if test="record.sizeD70 != null" >
        size_d70 = #{record.sizeD70,jdbcType=VARCHAR},
      </if>
      <if test="record.sizeD30Standard != null" >
        size_d30_standard = #{record.sizeD30Standard,jdbcType=REAL},
      </if>
      <if test="record.sizeD30Bias != null" >
        size_d30_bias = #{record.sizeD30Bias,jdbcType=REAL},
      </if>
      <if test="record.sizeD90 != null" >
        size_d90 = #{record.sizeD90,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.ni != null" >
        ni = #{record.ni,jdbcType=REAL},
      </if>
      <if test="record.co != null" >
        co = #{record.co,jdbcType=REAL},
      </if>
      <if test="record.mn != null" >
        mn = #{record.mn,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update process_parameters_hc_detail
    set code = #{record.code,jdbcType=BIGINT},
      process_code = #{record.processCode,jdbcType=BIGINT},
      production_code = #{record.productionCode,jdbcType=SMALLINT},
      flow_standard1 = #{record.flowStandard1,jdbcType=REAL},
      flow_bias1 = #{record.flowBias1,jdbcType=REAL},
      flow_standard2 = #{record.flowStandard2,jdbcType=REAL},
      flow_bias2 = #{record.flowBias2,jdbcType=REAL},
      rotate_speed_standard = #{record.rotateSpeedStandard,jdbcType=INTEGER},
      rotate_speed_bias = #{record.rotateSpeedBias,jdbcType=INTEGER},
      temperature_standard = #{record.temperatureStandard,jdbcType=REAL},
      temperature_bias = #{record.temperatureBias,jdbcType=REAL},
      basicity_standard = #{record.basicityStandard,jdbcType=REAL},
      basicity_bias = #{record.basicityBias,jdbcType=REAL},
      solid_containing_content_standard = #{record.solidContainingContentStandard,jdbcType=INTEGER},
      solid_containing_content_bias = #{record.solidContainingContentBias,jdbcType=INTEGER},
      nitrogen_flow_standard = #{record.nitrogenFlowStandard,jdbcType=INTEGER},
      nitrogen_flow_bias = #{record.nitrogenFlowBias,jdbcType=INTEGER},
      size_d70 = #{record.sizeD70,jdbcType=VARCHAR},
      size_d30_standard = #{record.sizeD30Standard,jdbcType=REAL},
      size_d30_bias = #{record.sizeD30Bias,jdbcType=REAL},
      size_d90 = #{record.sizeD90,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      ni = #{record.ni,jdbcType=REAL},
      co = #{record.co,jdbcType=REAL},
      mn = #{record.mn,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinchi.common.domain.ProcessParametersHcDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update process_parameters_hc_detail
    <set >
      <if test="processCode != null" >
        process_code = #{processCode,jdbcType=BIGINT},
      </if>
      <if test="productionCode != null" >
        production_code = #{productionCode,jdbcType=SMALLINT},
      </if>
      <if test="flowStandard1 != null" >
        flow_standard1 = #{flowStandard1,jdbcType=REAL},
      </if>
      <if test="flowBias1 != null" >
        flow_bias1 = #{flowBias1,jdbcType=REAL},
      </if>
      <if test="flowStandard2 != null" >
        flow_standard2 = #{flowStandard2,jdbcType=REAL},
      </if>
      <if test="flowBias2 != null" >
        flow_bias2 = #{flowBias2,jdbcType=REAL},
      </if>
      <if test="rotateSpeedStandard != null" >
        rotate_speed_standard = #{rotateSpeedStandard,jdbcType=INTEGER},
      </if>
      <if test="rotateSpeedBias != null" >
        rotate_speed_bias = #{rotateSpeedBias,jdbcType=INTEGER},
      </if>
      <if test="temperatureStandard != null" >
        temperature_standard = #{temperatureStandard,jdbcType=REAL},
      </if>
      <if test="temperatureBias != null" >
        temperature_bias = #{temperatureBias,jdbcType=REAL},
      </if>
      <if test="basicityStandard != null" >
        basicity_standard = #{basicityStandard,jdbcType=REAL},
      </if>
      <if test="basicityBias != null" >
        basicity_bias = #{basicityBias,jdbcType=REAL},
      </if>
      <if test="solidContainingContentStandard != null" >
        solid_containing_content_standard = #{solidContainingContentStandard,jdbcType=INTEGER},
      </if>
      <if test="solidContainingContentBias != null" >
        solid_containing_content_bias = #{solidContainingContentBias,jdbcType=INTEGER},
      </if>
      <if test="nitrogenFlowStandard != null" >
        nitrogen_flow_standard = #{nitrogenFlowStandard,jdbcType=INTEGER},
      </if>
      <if test="nitrogenFlowBias != null" >
        nitrogen_flow_bias = #{nitrogenFlowBias,jdbcType=INTEGER},
      </if>
      <if test="sizeD70 != null" >
        size_d70 = #{sizeD70,jdbcType=VARCHAR},
      </if>
      <if test="sizeD30Standard != null" >
        size_d30_standard = #{sizeD30Standard,jdbcType=REAL},
      </if>
      <if test="sizeD30Bias != null" >
        size_d30_bias = #{sizeD30Bias,jdbcType=REAL},
      </if>
      <if test="sizeD90 != null" >
        size_d90 = #{sizeD90,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="ni != null" >
        ni = #{ni,jdbcType=REAL},
      </if>
      <if test="co != null" >
        co = #{co,jdbcType=REAL},
      </if>
      <if test="mn != null" >
        mn = #{mn,jdbcType=REAL},
      </if>
    </set>
    where code = #{code,jdbcType=BIGINT}
  </update>
</mapper>