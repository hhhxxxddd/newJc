<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.ProductionInstrumentDataMapper" >
  <resultMap id="BaseResultMap" type="com.jinchi.common.domain.ProductionInstrumentData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <arg column="code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="cell_num" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sample_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="ph_value" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="temperature" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow1" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow2" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow3" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow4" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases1" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases2" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_water" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_gas" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="solid_containing_content" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="transducer_show" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="measured_3c" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, cell_num, sample_time, ph_value, temperature, salt_flow1, salt_flow2, salt_flow3, 
    salt_flow4, ammonia_bases1, ammonia_bases2, ammonia_water, ammonia_gas, solid_containing_content, 
    transducer_show, measured_3c
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinchi.common.domain.ProductionInstrumentDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from production_instrument_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jinchi.common.domain.ProductionInstrumentDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from production_instrument_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.jinchi.common.domain.ProductionInstrumentData" useGeneratedKeys="true" keyProperty="code" keyColumn="code">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into production_instrument_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="cellNum != null" >
        cell_num,
      </if>
      <if test="sampleTime != null" >
        sample_time,
      </if>
      <if test="phValue != null" >
        ph_value,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="saltFlow1 != null" >
        salt_flow1,
      </if>
      <if test="saltFlow2 != null" >
        salt_flow2,
      </if>
      <if test="saltFlow3 != null" >
        salt_flow3,
      </if>
      <if test="saltFlow4 != null" >
        salt_flow4,
      </if>
      <if test="ammoniaBases1 != null" >
        ammonia_bases1,
      </if>
      <if test="ammoniaBases2 != null" >
        ammonia_bases2,
      </if>
      <if test="ammoniaWater != null" >
        ammonia_water,
      </if>
      <if test="ammoniaGas != null" >
        ammonia_gas,
      </if>
      <if test="solidContainingContent != null" >
        solid_containing_content,
      </if>
      <if test="transducerShow != null" >
        transducer_show,
      </if>
      <if test="measured3c != null" >
        measured_3c,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=BIGINT},
      </if>
      <if test="cellNum != null" >
        #{cellNum,jdbcType=VARCHAR},
      </if>
      <if test="sampleTime != null" >
        #{sampleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phValue != null" >
        #{phValue,jdbcType=REAL},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=REAL},
      </if>
      <if test="saltFlow1 != null" >
        #{saltFlow1,jdbcType=REAL},
      </if>
      <if test="saltFlow2 != null" >
        #{saltFlow2,jdbcType=REAL},
      </if>
      <if test="saltFlow3 != null" >
        #{saltFlow3,jdbcType=REAL},
      </if>
      <if test="saltFlow4 != null" >
        #{saltFlow4,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1 != null" >
        #{ammoniaBases1,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2 != null" >
        #{ammoniaBases2,jdbcType=REAL},
      </if>
      <if test="ammoniaWater != null" >
        #{ammoniaWater,jdbcType=REAL},
      </if>
      <if test="ammoniaGas != null" >
        #{ammoniaGas,jdbcType=REAL},
      </if>
      <if test="solidContainingContent != null" >
        #{solidContainingContent,jdbcType=REAL},
      </if>
      <if test="transducerShow != null" >
        #{transducerShow,jdbcType=REAL},
      </if>
      <if test="measured3c != null" >
        #{measured3c,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinchi.common.domain.ProductionInstrumentDataExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from production_instrument_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instrument_data
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=BIGINT},
      </if>
      <if test="record.cellNum != null" >
        cell_num = #{record.cellNum,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleTime != null" >
        sample_time = #{record.sampleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phValue != null" >
        ph_value = #{record.phValue,jdbcType=REAL},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=REAL},
      </if>
      <if test="record.saltFlow1 != null" >
        salt_flow1 = #{record.saltFlow1,jdbcType=REAL},
      </if>
      <if test="record.saltFlow2 != null" >
        salt_flow2 = #{record.saltFlow2,jdbcType=REAL},
      </if>
      <if test="record.saltFlow3 != null" >
        salt_flow3 = #{record.saltFlow3,jdbcType=REAL},
      </if>
      <if test="record.saltFlow4 != null" >
        salt_flow4 = #{record.saltFlow4,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases1 != null" >
        ammonia_bases1 = #{record.ammoniaBases1,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases2 != null" >
        ammonia_bases2 = #{record.ammoniaBases2,jdbcType=REAL},
      </if>
      <if test="record.ammoniaWater != null" >
        ammonia_water = #{record.ammoniaWater,jdbcType=REAL},
      </if>
      <if test="record.ammoniaGas != null" >
        ammonia_gas = #{record.ammoniaGas,jdbcType=REAL},
      </if>
      <if test="record.solidContainingContent != null" >
        solid_containing_content = #{record.solidContainingContent,jdbcType=REAL},
      </if>
      <if test="record.transducerShow != null" >
        transducer_show = #{record.transducerShow,jdbcType=REAL},
      </if>
      <if test="record.measured3c != null" >
        measured_3c = #{record.measured3c,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instrument_data
    set code = #{record.code,jdbcType=BIGINT},
      cell_num = #{record.cellNum,jdbcType=VARCHAR},
      sample_time = #{record.sampleTime,jdbcType=TIMESTAMP},
      ph_value = #{record.phValue,jdbcType=REAL},
      temperature = #{record.temperature,jdbcType=REAL},
      salt_flow1 = #{record.saltFlow1,jdbcType=REAL},
      salt_flow2 = #{record.saltFlow2,jdbcType=REAL},
      salt_flow3 = #{record.saltFlow3,jdbcType=REAL},
      salt_flow4 = #{record.saltFlow4,jdbcType=REAL},
      ammonia_bases1 = #{record.ammoniaBases1,jdbcType=REAL},
      ammonia_bases2 = #{record.ammoniaBases2,jdbcType=REAL},
      ammonia_water = #{record.ammoniaWater,jdbcType=REAL},
      ammonia_gas = #{record.ammoniaGas,jdbcType=REAL},
      solid_containing_content = #{record.solidContainingContent,jdbcType=REAL},
      transducer_show = #{record.transducerShow,jdbcType=REAL},
      measured_3c = #{record.measured3c,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>