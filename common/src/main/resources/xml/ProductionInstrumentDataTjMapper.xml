<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.ProductionInstrumentDataTjMapper" >
  <resultMap id="BaseResultMap" type="com.jinchi.common.domain.ProductionInstrumentDataTj" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="cell_num" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ph_value_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ph_value_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ph_value_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="temperature_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="temperature_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="temperature_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow1_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow1_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow1_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow2_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow2_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow2_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow3_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow3_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow3_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow4_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow4_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="salt_flow4_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases1_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases1_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases1_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases2_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases2_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_bases2_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_water_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_water_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_water_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_gas_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_gas_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="ammonia_gas_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="solid_containing_content_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="solid_containing_content_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="solid_containing_content_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="transducer_show_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="transducer_show_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="transducer_show_avg" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="measured_3c_min" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="measured_3c_max" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="measured_3c_avg" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, cell_num, ph_value_min, ph_value_max, ph_value_avg, temperature_min, temperature_max, 
    temperature_avg, salt_flow1_min, salt_flow1_max, salt_flow1_avg, salt_flow2_min, 
    salt_flow2_max, salt_flow2_avg, salt_flow3_min, salt_flow3_max, salt_flow3_avg, salt_flow4_min, 
    salt_flow4_max, salt_flow4_avg, ammonia_bases1_min, ammonia_bases1_max, ammonia_bases1_avg, 
    ammonia_bases2_min, ammonia_bases2_max, ammonia_bases2_avg, ammonia_water_min, ammonia_water_max, 
    ammonia_water_avg, ammonia_gas_min, ammonia_gas_max, ammonia_gas_avg, solid_containing_content_min, 
    solid_containing_content_max, solid_containing_content_avg, transducer_show_min, 
    transducer_show_max, transducer_show_avg, measured_3c_min, measured_3c_max, measured_3c_avg
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinchi.common.domain.ProductionInstrumentDataTjExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from production_instrument_data_tj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jinchi.common.domain.ProductionInstrumentDataTjExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from production_instrument_data_tj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.jinchi.common.domain.ProductionInstrumentDataTj" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="code" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into production_instrument_data_tj
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cellNum != null" >
        cell_num,
      </if>
      <if test="phValueMin != null" >
        ph_value_min,
      </if>
      <if test="phValueMax != null" >
        ph_value_max,
      </if>
      <if test="phValueAvg != null" >
        ph_value_avg,
      </if>
      <if test="temperatureMin != null" >
        temperature_min,
      </if>
      <if test="temperatureMax != null" >
        temperature_max,
      </if>
      <if test="temperatureAvg != null" >
        temperature_avg,
      </if>
      <if test="saltFlow1Min != null" >
        salt_flow1_min,
      </if>
      <if test="saltFlow1Max != null" >
        salt_flow1_max,
      </if>
      <if test="saltFlow1Avg != null" >
        salt_flow1_avg,
      </if>
      <if test="saltFlow2Min != null" >
        salt_flow2_min,
      </if>
      <if test="saltFlow2Max != null" >
        salt_flow2_max,
      </if>
      <if test="saltFlow2Avg != null" >
        salt_flow2_avg,
      </if>
      <if test="saltFlow3Min != null" >
        salt_flow3_min,
      </if>
      <if test="saltFlow3Max != null" >
        salt_flow3_max,
      </if>
      <if test="saltFlow3Avg != null" >
        salt_flow3_avg,
      </if>
      <if test="saltFlow4Min != null" >
        salt_flow4_min,
      </if>
      <if test="saltFlow4Max != null" >
        salt_flow4_max,
      </if>
      <if test="saltFlow4Avg != null" >
        salt_flow4_avg,
      </if>
      <if test="ammoniaBases1Min != null" >
        ammonia_bases1_min,
      </if>
      <if test="ammoniaBases1Max != null" >
        ammonia_bases1_max,
      </if>
      <if test="ammoniaBases1Avg != null" >
        ammonia_bases1_avg,
      </if>
      <if test="ammoniaBases2Min != null" >
        ammonia_bases2_min,
      </if>
      <if test="ammoniaBases2Max != null" >
        ammonia_bases2_max,
      </if>
      <if test="ammoniaBases2Avg != null" >
        ammonia_bases2_avg,
      </if>
      <if test="ammoniaWaterMin != null" >
        ammonia_water_min,
      </if>
      <if test="ammoniaWaterMax != null" >
        ammonia_water_max,
      </if>
      <if test="ammoniaWaterAvg != null" >
        ammonia_water_avg,
      </if>
      <if test="ammoniaGasMin != null" >
        ammonia_gas_min,
      </if>
      <if test="ammoniaGasMax != null" >
        ammonia_gas_max,
      </if>
      <if test="ammoniaGasAvg != null" >
        ammonia_gas_avg,
      </if>
      <if test="solidContainingContentMin != null" >
        solid_containing_content_min,
      </if>
      <if test="solidContainingContentMax != null" >
        solid_containing_content_max,
      </if>
      <if test="solidContainingContentAvg != null" >
        solid_containing_content_avg,
      </if>
      <if test="transducerShowMin != null" >
        transducer_show_min,
      </if>
      <if test="transducerShowMax != null" >
        transducer_show_max,
      </if>
      <if test="transducerShowAvg != null" >
        transducer_show_avg,
      </if>
      <if test="measured3cMin != null" >
        measured_3c_min,
      </if>
      <if test="measured3cMax != null" >
        measured_3c_max,
      </if>
      <if test="measured3cAvg != null" >
        measured_3c_avg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cellNum != null" >
        #{cellNum,jdbcType=VARCHAR},
      </if>
      <if test="phValueMin != null" >
        #{phValueMin,jdbcType=REAL},
      </if>
      <if test="phValueMax != null" >
        #{phValueMax,jdbcType=REAL},
      </if>
      <if test="phValueAvg != null" >
        #{phValueAvg,jdbcType=REAL},
      </if>
      <if test="temperatureMin != null" >
        #{temperatureMin,jdbcType=REAL},
      </if>
      <if test="temperatureMax != null" >
        #{temperatureMax,jdbcType=REAL},
      </if>
      <if test="temperatureAvg != null" >
        #{temperatureAvg,jdbcType=REAL},
      </if>
      <if test="saltFlow1Min != null" >
        #{saltFlow1Min,jdbcType=REAL},
      </if>
      <if test="saltFlow1Max != null" >
        #{saltFlow1Max,jdbcType=REAL},
      </if>
      <if test="saltFlow1Avg != null" >
        #{saltFlow1Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow2Min != null" >
        #{saltFlow2Min,jdbcType=REAL},
      </if>
      <if test="saltFlow2Max != null" >
        #{saltFlow2Max,jdbcType=REAL},
      </if>
      <if test="saltFlow2Avg != null" >
        #{saltFlow2Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow3Min != null" >
        #{saltFlow3Min,jdbcType=REAL},
      </if>
      <if test="saltFlow3Max != null" >
        #{saltFlow3Max,jdbcType=REAL},
      </if>
      <if test="saltFlow3Avg != null" >
        #{saltFlow3Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow4Min != null" >
        #{saltFlow4Min,jdbcType=REAL},
      </if>
      <if test="saltFlow4Max != null" >
        #{saltFlow4Max,jdbcType=REAL},
      </if>
      <if test="saltFlow4Avg != null" >
        #{saltFlow4Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Min != null" >
        #{ammoniaBases1Min,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Max != null" >
        #{ammoniaBases1Max,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Avg != null" >
        #{ammoniaBases1Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Min != null" >
        #{ammoniaBases2Min,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Max != null" >
        #{ammoniaBases2Max,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Avg != null" >
        #{ammoniaBases2Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterMin != null" >
        #{ammoniaWaterMin,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterMax != null" >
        #{ammoniaWaterMax,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterAvg != null" >
        #{ammoniaWaterAvg,jdbcType=REAL},
      </if>
      <if test="ammoniaGasMin != null" >
        #{ammoniaGasMin,jdbcType=REAL},
      </if>
      <if test="ammoniaGasMax != null" >
        #{ammoniaGasMax,jdbcType=REAL},
      </if>
      <if test="ammoniaGasAvg != null" >
        #{ammoniaGasAvg,jdbcType=REAL},
      </if>
      <if test="solidContainingContentMin != null" >
        #{solidContainingContentMin,jdbcType=REAL},
      </if>
      <if test="solidContainingContentMax != null" >
        #{solidContainingContentMax,jdbcType=REAL},
      </if>
      <if test="solidContainingContentAvg != null" >
        #{solidContainingContentAvg,jdbcType=REAL},
      </if>
      <if test="transducerShowMin != null" >
        #{transducerShowMin,jdbcType=REAL},
      </if>
      <if test="transducerShowMax != null" >
        #{transducerShowMax,jdbcType=REAL},
      </if>
      <if test="transducerShowAvg != null" >
        #{transducerShowAvg,jdbcType=REAL},
      </if>
      <if test="measured3cMin != null" >
        #{measured3cMin,jdbcType=REAL},
      </if>
      <if test="measured3cMax != null" >
        #{measured3cMax,jdbcType=REAL},
      </if>
      <if test="measured3cAvg != null" >
        #{measured3cAvg,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinchi.common.domain.ProductionInstrumentDataTjExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from production_instrument_data_tj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instrument_data_tj
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=BIGINT},
      </if>
      <if test="record.cellNum != null" >
        cell_num = #{record.cellNum,jdbcType=VARCHAR},
      </if>
      <if test="record.phValueMin != null" >
        ph_value_min = #{record.phValueMin,jdbcType=REAL},
      </if>
      <if test="record.phValueMax != null" >
        ph_value_max = #{record.phValueMax,jdbcType=REAL},
      </if>
      <if test="record.phValueAvg != null" >
        ph_value_avg = #{record.phValueAvg,jdbcType=REAL},
      </if>
      <if test="record.temperatureMin != null" >
        temperature_min = #{record.temperatureMin,jdbcType=REAL},
      </if>
      <if test="record.temperatureMax != null" >
        temperature_max = #{record.temperatureMax,jdbcType=REAL},
      </if>
      <if test="record.temperatureAvg != null" >
        temperature_avg = #{record.temperatureAvg,jdbcType=REAL},
      </if>
      <if test="record.saltFlow1Min != null" >
        salt_flow1_min = #{record.saltFlow1Min,jdbcType=REAL},
      </if>
      <if test="record.saltFlow1Max != null" >
        salt_flow1_max = #{record.saltFlow1Max,jdbcType=REAL},
      </if>
      <if test="record.saltFlow1Avg != null" >
        salt_flow1_avg = #{record.saltFlow1Avg,jdbcType=REAL},
      </if>
      <if test="record.saltFlow2Min != null" >
        salt_flow2_min = #{record.saltFlow2Min,jdbcType=REAL},
      </if>
      <if test="record.saltFlow2Max != null" >
        salt_flow2_max = #{record.saltFlow2Max,jdbcType=REAL},
      </if>
      <if test="record.saltFlow2Avg != null" >
        salt_flow2_avg = #{record.saltFlow2Avg,jdbcType=REAL},
      </if>
      <if test="record.saltFlow3Min != null" >
        salt_flow3_min = #{record.saltFlow3Min,jdbcType=REAL},
      </if>
      <if test="record.saltFlow3Max != null" >
        salt_flow3_max = #{record.saltFlow3Max,jdbcType=REAL},
      </if>
      <if test="record.saltFlow3Avg != null" >
        salt_flow3_avg = #{record.saltFlow3Avg,jdbcType=REAL},
      </if>
      <if test="record.saltFlow4Min != null" >
        salt_flow4_min = #{record.saltFlow4Min,jdbcType=REAL},
      </if>
      <if test="record.saltFlow4Max != null" >
        salt_flow4_max = #{record.saltFlow4Max,jdbcType=REAL},
      </if>
      <if test="record.saltFlow4Avg != null" >
        salt_flow4_avg = #{record.saltFlow4Avg,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases1Min != null" >
        ammonia_bases1_min = #{record.ammoniaBases1Min,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases1Max != null" >
        ammonia_bases1_max = #{record.ammoniaBases1Max,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases1Avg != null" >
        ammonia_bases1_avg = #{record.ammoniaBases1Avg,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases2Min != null" >
        ammonia_bases2_min = #{record.ammoniaBases2Min,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases2Max != null" >
        ammonia_bases2_max = #{record.ammoniaBases2Max,jdbcType=REAL},
      </if>
      <if test="record.ammoniaBases2Avg != null" >
        ammonia_bases2_avg = #{record.ammoniaBases2Avg,jdbcType=REAL},
      </if>
      <if test="record.ammoniaWaterMin != null" >
        ammonia_water_min = #{record.ammoniaWaterMin,jdbcType=REAL},
      </if>
      <if test="record.ammoniaWaterMax != null" >
        ammonia_water_max = #{record.ammoniaWaterMax,jdbcType=REAL},
      </if>
      <if test="record.ammoniaWaterAvg != null" >
        ammonia_water_avg = #{record.ammoniaWaterAvg,jdbcType=REAL},
      </if>
      <if test="record.ammoniaGasMin != null" >
        ammonia_gas_min = #{record.ammoniaGasMin,jdbcType=REAL},
      </if>
      <if test="record.ammoniaGasMax != null" >
        ammonia_gas_max = #{record.ammoniaGasMax,jdbcType=REAL},
      </if>
      <if test="record.ammoniaGasAvg != null" >
        ammonia_gas_avg = #{record.ammoniaGasAvg,jdbcType=REAL},
      </if>
      <if test="record.solidContainingContentMin != null" >
        solid_containing_content_min = #{record.solidContainingContentMin,jdbcType=REAL},
      </if>
      <if test="record.solidContainingContentMax != null" >
        solid_containing_content_max = #{record.solidContainingContentMax,jdbcType=REAL},
      </if>
      <if test="record.solidContainingContentAvg != null" >
        solid_containing_content_avg = #{record.solidContainingContentAvg,jdbcType=REAL},
      </if>
      <if test="record.transducerShowMin != null" >
        transducer_show_min = #{record.transducerShowMin,jdbcType=REAL},
      </if>
      <if test="record.transducerShowMax != null" >
        transducer_show_max = #{record.transducerShowMax,jdbcType=REAL},
      </if>
      <if test="record.transducerShowAvg != null" >
        transducer_show_avg = #{record.transducerShowAvg,jdbcType=REAL},
      </if>
      <if test="record.measured3cMin != null" >
        measured_3c_min = #{record.measured3cMin,jdbcType=REAL},
      </if>
      <if test="record.measured3cMax != null" >
        measured_3c_max = #{record.measured3cMax,jdbcType=REAL},
      </if>
      <if test="record.measured3cAvg != null" >
        measured_3c_avg = #{record.measured3cAvg,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instrument_data_tj
    set code = #{record.code,jdbcType=BIGINT},
      cell_num = #{record.cellNum,jdbcType=VARCHAR},
      ph_value_min = #{record.phValueMin,jdbcType=REAL},
      ph_value_max = #{record.phValueMax,jdbcType=REAL},
      ph_value_avg = #{record.phValueAvg,jdbcType=REAL},
      temperature_min = #{record.temperatureMin,jdbcType=REAL},
      temperature_max = #{record.temperatureMax,jdbcType=REAL},
      temperature_avg = #{record.temperatureAvg,jdbcType=REAL},
      salt_flow1_min = #{record.saltFlow1Min,jdbcType=REAL},
      salt_flow1_max = #{record.saltFlow1Max,jdbcType=REAL},
      salt_flow1_avg = #{record.saltFlow1Avg,jdbcType=REAL},
      salt_flow2_min = #{record.saltFlow2Min,jdbcType=REAL},
      salt_flow2_max = #{record.saltFlow2Max,jdbcType=REAL},
      salt_flow2_avg = #{record.saltFlow2Avg,jdbcType=REAL},
      salt_flow3_min = #{record.saltFlow3Min,jdbcType=REAL},
      salt_flow3_max = #{record.saltFlow3Max,jdbcType=REAL},
      salt_flow3_avg = #{record.saltFlow3Avg,jdbcType=REAL},
      salt_flow4_min = #{record.saltFlow4Min,jdbcType=REAL},
      salt_flow4_max = #{record.saltFlow4Max,jdbcType=REAL},
      salt_flow4_avg = #{record.saltFlow4Avg,jdbcType=REAL},
      ammonia_bases1_min = #{record.ammoniaBases1Min,jdbcType=REAL},
      ammonia_bases1_max = #{record.ammoniaBases1Max,jdbcType=REAL},
      ammonia_bases1_avg = #{record.ammoniaBases1Avg,jdbcType=REAL},
      ammonia_bases2_min = #{record.ammoniaBases2Min,jdbcType=REAL},
      ammonia_bases2_max = #{record.ammoniaBases2Max,jdbcType=REAL},
      ammonia_bases2_avg = #{record.ammoniaBases2Avg,jdbcType=REAL},
      ammonia_water_min = #{record.ammoniaWaterMin,jdbcType=REAL},
      ammonia_water_max = #{record.ammoniaWaterMax,jdbcType=REAL},
      ammonia_water_avg = #{record.ammoniaWaterAvg,jdbcType=REAL},
      ammonia_gas_min = #{record.ammoniaGasMin,jdbcType=REAL},
      ammonia_gas_max = #{record.ammoniaGasMax,jdbcType=REAL},
      ammonia_gas_avg = #{record.ammoniaGasAvg,jdbcType=REAL},
      solid_containing_content_min = #{record.solidContainingContentMin,jdbcType=REAL},
      solid_containing_content_max = #{record.solidContainingContentMax,jdbcType=REAL},
      solid_containing_content_avg = #{record.solidContainingContentAvg,jdbcType=REAL},
      transducer_show_min = #{record.transducerShowMin,jdbcType=REAL},
      transducer_show_max = #{record.transducerShowMax,jdbcType=REAL},
      transducer_show_avg = #{record.transducerShowAvg,jdbcType=REAL},
      measured_3c_min = #{record.measured3cMin,jdbcType=REAL},
      measured_3c_max = #{record.measured3cMax,jdbcType=REAL},
      measured_3c_avg = #{record.measured3cAvg,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinchi.common.domain.ProductionInstrumentDataTj" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instrument_data_tj
    <set >
      <if test="cellNum != null" >
        cell_num = #{cellNum,jdbcType=VARCHAR},
      </if>
      <if test="phValueMin != null" >
        ph_value_min = #{phValueMin,jdbcType=REAL},
      </if>
      <if test="phValueMax != null" >
        ph_value_max = #{phValueMax,jdbcType=REAL},
      </if>
      <if test="phValueAvg != null" >
        ph_value_avg = #{phValueAvg,jdbcType=REAL},
      </if>
      <if test="temperatureMin != null" >
        temperature_min = #{temperatureMin,jdbcType=REAL},
      </if>
      <if test="temperatureMax != null" >
        temperature_max = #{temperatureMax,jdbcType=REAL},
      </if>
      <if test="temperatureAvg != null" >
        temperature_avg = #{temperatureAvg,jdbcType=REAL},
      </if>
      <if test="saltFlow1Min != null" >
        salt_flow1_min = #{saltFlow1Min,jdbcType=REAL},
      </if>
      <if test="saltFlow1Max != null" >
        salt_flow1_max = #{saltFlow1Max,jdbcType=REAL},
      </if>
      <if test="saltFlow1Avg != null" >
        salt_flow1_avg = #{saltFlow1Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow2Min != null" >
        salt_flow2_min = #{saltFlow2Min,jdbcType=REAL},
      </if>
      <if test="saltFlow2Max != null" >
        salt_flow2_max = #{saltFlow2Max,jdbcType=REAL},
      </if>
      <if test="saltFlow2Avg != null" >
        salt_flow2_avg = #{saltFlow2Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow3Min != null" >
        salt_flow3_min = #{saltFlow3Min,jdbcType=REAL},
      </if>
      <if test="saltFlow3Max != null" >
        salt_flow3_max = #{saltFlow3Max,jdbcType=REAL},
      </if>
      <if test="saltFlow3Avg != null" >
        salt_flow3_avg = #{saltFlow3Avg,jdbcType=REAL},
      </if>
      <if test="saltFlow4Min != null" >
        salt_flow4_min = #{saltFlow4Min,jdbcType=REAL},
      </if>
      <if test="saltFlow4Max != null" >
        salt_flow4_max = #{saltFlow4Max,jdbcType=REAL},
      </if>
      <if test="saltFlow4Avg != null" >
        salt_flow4_avg = #{saltFlow4Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Min != null" >
        ammonia_bases1_min = #{ammoniaBases1Min,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Max != null" >
        ammonia_bases1_max = #{ammoniaBases1Max,jdbcType=REAL},
      </if>
      <if test="ammoniaBases1Avg != null" >
        ammonia_bases1_avg = #{ammoniaBases1Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Min != null" >
        ammonia_bases2_min = #{ammoniaBases2Min,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Max != null" >
        ammonia_bases2_max = #{ammoniaBases2Max,jdbcType=REAL},
      </if>
      <if test="ammoniaBases2Avg != null" >
        ammonia_bases2_avg = #{ammoniaBases2Avg,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterMin != null" >
        ammonia_water_min = #{ammoniaWaterMin,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterMax != null" >
        ammonia_water_max = #{ammoniaWaterMax,jdbcType=REAL},
      </if>
      <if test="ammoniaWaterAvg != null" >
        ammonia_water_avg = #{ammoniaWaterAvg,jdbcType=REAL},
      </if>
      <if test="ammoniaGasMin != null" >
        ammonia_gas_min = #{ammoniaGasMin,jdbcType=REAL},
      </if>
      <if test="ammoniaGasMax != null" >
        ammonia_gas_max = #{ammoniaGasMax,jdbcType=REAL},
      </if>
      <if test="ammoniaGasAvg != null" >
        ammonia_gas_avg = #{ammoniaGasAvg,jdbcType=REAL},
      </if>
      <if test="solidContainingContentMin != null" >
        solid_containing_content_min = #{solidContainingContentMin,jdbcType=REAL},
      </if>
      <if test="solidContainingContentMax != null" >
        solid_containing_content_max = #{solidContainingContentMax,jdbcType=REAL},
      </if>
      <if test="solidContainingContentAvg != null" >
        solid_containing_content_avg = #{solidContainingContentAvg,jdbcType=REAL},
      </if>
      <if test="transducerShowMin != null" >
        transducer_show_min = #{transducerShowMin,jdbcType=REAL},
      </if>
      <if test="transducerShowMax != null" >
        transducer_show_max = #{transducerShowMax,jdbcType=REAL},
      </if>
      <if test="transducerShowAvg != null" >
        transducer_show_avg = #{transducerShowAvg,jdbcType=REAL},
      </if>
      <if test="measured3cMin != null" >
        measured_3c_min = #{measured3cMin,jdbcType=REAL},
      </if>
      <if test="measured3cMax != null" >
        measured_3c_max = #{measured3cMax,jdbcType=REAL},
      </if>
      <if test="measured3cAvg != null" >
        measured_3c_avg = #{measured3cAvg,jdbcType=REAL},
      </if>
    </set>
    where code = #{code,jdbcType=BIGINT}
  </update>
</mapper>