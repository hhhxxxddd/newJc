<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.AnodeCostAccountingStatisticTotalsMapper" >
  <resultMap id="BaseResultMap" type="com.jinchi.common.domain.AnodeCostAccountingStatisticTotals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="statistic_code" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="periods" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="material_requisitions" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="material_balance" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="last_material_in_process_first" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="current_goods_in_process_first" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="last_goods_in_process_second" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="current_goods_in_process_second" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="unit_consumption_precursor" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="unit_consumption_neurolithium" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="product_storage" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, statistic_code, periods, material_requisitions, material_balance, last_material_in_process_first, 
    current_goods_in_process_first, last_goods_in_process_second, current_goods_in_process_second, 
    unit_consumption_precursor, unit_consumption_neurolithium, product_storage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinchi.common.domain.AnodeCostAccountingStatisticTotalsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from anode_cost_accounting_statistic_totals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jinchi.common.domain.AnodeCostAccountingStatisticTotalsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from anode_cost_accounting_statistic_totals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.jinchi.common.domain.AnodeCostAccountingStatisticTotals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="code" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into anode_cost_accounting_statistic_totals
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="statisticCode != null" >
        statistic_code,
      </if>
      <if test="periods != null" >
        periods,
      </if>
      <if test="materialRequisitions != null" >
        material_requisitions,
      </if>
      <if test="materialBalance != null" >
        material_balance,
      </if>
      <if test="lastMaterialInProcessFirst != null" >
        last_material_in_process_first,
      </if>
      <if test="currentGoodsInProcessFirst != null" >
        current_goods_in_process_first,
      </if>
      <if test="lastGoodsInProcessSecond != null" >
        last_goods_in_process_second,
      </if>
      <if test="currentGoodsInProcessSecond != null" >
        current_goods_in_process_second,
      </if>
      <if test="unitConsumptionPrecursor != null" >
        unit_consumption_precursor,
      </if>
      <if test="unitConsumptionNeurolithium != null" >
        unit_consumption_neurolithium,
      </if>
      <if test="productStorage != null" >
        product_storage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="statisticCode != null" >
        #{statisticCode,jdbcType=BIGINT},
      </if>
      <if test="periods != null" >
        #{periods,jdbcType=INTEGER},
      </if>
      <if test="materialRequisitions != null" >
        #{materialRequisitions,jdbcType=REAL},
      </if>
      <if test="materialBalance != null" >
        #{materialBalance,jdbcType=REAL},
      </if>
      <if test="lastMaterialInProcessFirst != null" >
        #{lastMaterialInProcessFirst,jdbcType=REAL},
      </if>
      <if test="currentGoodsInProcessFirst != null" >
        #{currentGoodsInProcessFirst,jdbcType=REAL},
      </if>
      <if test="lastGoodsInProcessSecond != null" >
        #{lastGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="currentGoodsInProcessSecond != null" >
        #{currentGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="unitConsumptionPrecursor != null" >
        #{unitConsumptionPrecursor,jdbcType=REAL},
      </if>
      <if test="unitConsumptionNeurolithium != null" >
        #{unitConsumptionNeurolithium,jdbcType=REAL},
      </if>
      <if test="productStorage != null" >
        #{productStorage,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinchi.common.domain.AnodeCostAccountingStatisticTotalsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from anode_cost_accounting_statistic_totals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update anode_cost_accounting_statistic_totals
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=BIGINT},
      </if>
      <if test="record.statisticCode != null" >
        statistic_code = #{record.statisticCode,jdbcType=BIGINT},
      </if>
      <if test="record.periods != null" >
        periods = #{record.periods,jdbcType=INTEGER},
      </if>
      <if test="record.materialRequisitions != null" >
        material_requisitions = #{record.materialRequisitions,jdbcType=REAL},
      </if>
      <if test="record.materialBalance != null" >
        material_balance = #{record.materialBalance,jdbcType=REAL},
      </if>
      <if test="record.lastMaterialInProcessFirst != null" >
        last_material_in_process_first = #{record.lastMaterialInProcessFirst,jdbcType=REAL},
      </if>
      <if test="record.currentGoodsInProcessFirst != null" >
        current_goods_in_process_first = #{record.currentGoodsInProcessFirst,jdbcType=REAL},
      </if>
      <if test="record.lastGoodsInProcessSecond != null" >
        last_goods_in_process_second = #{record.lastGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="record.currentGoodsInProcessSecond != null" >
        current_goods_in_process_second = #{record.currentGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="record.unitConsumptionPrecursor != null" >
        unit_consumption_precursor = #{record.unitConsumptionPrecursor,jdbcType=REAL},
      </if>
      <if test="record.unitConsumptionNeurolithium != null" >
        unit_consumption_neurolithium = #{record.unitConsumptionNeurolithium,jdbcType=REAL},
      </if>
      <if test="record.productStorage != null" >
        product_storage = #{record.productStorage,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update anode_cost_accounting_statistic_totals
    set code = #{record.code,jdbcType=BIGINT},
      statistic_code = #{record.statisticCode,jdbcType=BIGINT},
      periods = #{record.periods,jdbcType=INTEGER},
      material_requisitions = #{record.materialRequisitions,jdbcType=REAL},
      material_balance = #{record.materialBalance,jdbcType=REAL},
      last_material_in_process_first = #{record.lastMaterialInProcessFirst,jdbcType=REAL},
      current_goods_in_process_first = #{record.currentGoodsInProcessFirst,jdbcType=REAL},
      last_goods_in_process_second = #{record.lastGoodsInProcessSecond,jdbcType=REAL},
      current_goods_in_process_second = #{record.currentGoodsInProcessSecond,jdbcType=REAL},
      unit_consumption_precursor = #{record.unitConsumptionPrecursor,jdbcType=REAL},
      unit_consumption_neurolithium = #{record.unitConsumptionNeurolithium,jdbcType=REAL},
      product_storage = #{record.productStorage,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinchi.common.domain.AnodeCostAccountingStatisticTotals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update anode_cost_accounting_statistic_totals
    <set >
      <if test="statisticCode != null" >
        statistic_code = #{statisticCode,jdbcType=BIGINT},
      </if>
      <if test="periods != null" >
        periods = #{periods,jdbcType=INTEGER},
      </if>
      <if test="materialRequisitions != null" >
        material_requisitions = #{materialRequisitions,jdbcType=REAL},
      </if>
      <if test="materialBalance != null" >
        material_balance = #{materialBalance,jdbcType=REAL},
      </if>
      <if test="lastMaterialInProcessFirst != null" >
        last_material_in_process_first = #{lastMaterialInProcessFirst,jdbcType=REAL},
      </if>
      <if test="currentGoodsInProcessFirst != null" >
        current_goods_in_process_first = #{currentGoodsInProcessFirst,jdbcType=REAL},
      </if>
      <if test="lastGoodsInProcessSecond != null" >
        last_goods_in_process_second = #{lastGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="currentGoodsInProcessSecond != null" >
        current_goods_in_process_second = #{currentGoodsInProcessSecond,jdbcType=REAL},
      </if>
      <if test="unitConsumptionPrecursor != null" >
        unit_consumption_precursor = #{unitConsumptionPrecursor,jdbcType=REAL},
      </if>
      <if test="unitConsumptionNeurolithium != null" >
        unit_consumption_neurolithium = #{unitConsumptionNeurolithium,jdbcType=REAL},
      </if>
      <if test="productStorage != null" >
        product_storage = #{productStorage,jdbcType=REAL},
      </if>
    </set>
    where code = #{code,jdbcType=BIGINT}
  </update>
</mapper>