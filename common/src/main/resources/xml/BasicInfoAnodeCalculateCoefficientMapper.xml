<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.BasicInfoAnodeCalculateCoefficientMapper" >
  <resultMap id="BaseResultMap" type="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficient" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="code" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="bag_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="bowl_fill_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="bowl_num" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="burning_loss_rate" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="smash_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="presintering_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="second_sintering_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="high_mixing_machine_weight" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="matching_coefficient_precursors" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="matching_coefficient_lithium_carbonate" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="matching_coefficient_hop_pocket" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, bag_weight, bowl_fill_weight, bowl_num, burning_loss_rate, smash_weight, presintering_weight, 
    second_sintering_weight, high_mixing_machine_weight, matching_coefficient_precursors, 
    matching_coefficient_lithium_carbonate, matching_coefficient_hop_pocket
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficientExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from basic_info_anode_calculate_coefficient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficientExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from basic_info_anode_calculate_coefficient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficient" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Byte" keyProperty="code" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into basic_info_anode_calculate_coefficient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bagWeight != null" >
        bag_weight,
      </if>
      <if test="bowlFillWeight != null" >
        bowl_fill_weight,
      </if>
      <if test="bowlNum != null" >
        bowl_num,
      </if>
      <if test="burningLossRate != null" >
        burning_loss_rate,
      </if>
      <if test="smashWeight != null" >
        smash_weight,
      </if>
      <if test="presinteringWeight != null" >
        presintering_weight,
      </if>
      <if test="secondSinteringWeight != null" >
        second_sintering_weight,
      </if>
      <if test="highMixingMachineWeight != null" >
        high_mixing_machine_weight,
      </if>
      <if test="matchingCoefficientPrecursors != null" >
        matching_coefficient_precursors,
      </if>
      <if test="matchingCoefficientLithiumCarbonate != null" >
        matching_coefficient_lithium_carbonate,
      </if>
      <if test="matchingCoefficientHopPocket != null" >
        matching_coefficient_hop_pocket,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bagWeight != null" >
        #{bagWeight,jdbcType=REAL},
      </if>
      <if test="bowlFillWeight != null" >
        #{bowlFillWeight,jdbcType=REAL},
      </if>
      <if test="bowlNum != null" >
        #{bowlNum,jdbcType=TINYINT},
      </if>
      <if test="burningLossRate != null" >
        #{burningLossRate,jdbcType=REAL},
      </if>
      <if test="smashWeight != null" >
        #{smashWeight,jdbcType=REAL},
      </if>
      <if test="presinteringWeight != null" >
        #{presinteringWeight,jdbcType=REAL},
      </if>
      <if test="secondSinteringWeight != null" >
        #{secondSinteringWeight,jdbcType=REAL},
      </if>
      <if test="highMixingMachineWeight != null" >
        #{highMixingMachineWeight,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientPrecursors != null" >
        #{matchingCoefficientPrecursors,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientLithiumCarbonate != null" >
        #{matchingCoefficientLithiumCarbonate,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientHopPocket != null" >
        #{matchingCoefficientHopPocket,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficientExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from basic_info_anode_calculate_coefficient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info_anode_calculate_coefficient
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=TINYINT},
      </if>
      <if test="record.bagWeight != null" >
        bag_weight = #{record.bagWeight,jdbcType=REAL},
      </if>
      <if test="record.bowlFillWeight != null" >
        bowl_fill_weight = #{record.bowlFillWeight,jdbcType=REAL},
      </if>
      <if test="record.bowlNum != null" >
        bowl_num = #{record.bowlNum,jdbcType=TINYINT},
      </if>
      <if test="record.burningLossRate != null" >
        burning_loss_rate = #{record.burningLossRate,jdbcType=REAL},
      </if>
      <if test="record.smashWeight != null" >
        smash_weight = #{record.smashWeight,jdbcType=REAL},
      </if>
      <if test="record.presinteringWeight != null" >
        presintering_weight = #{record.presinteringWeight,jdbcType=REAL},
      </if>
      <if test="record.secondSinteringWeight != null" >
        second_sintering_weight = #{record.secondSinteringWeight,jdbcType=REAL},
      </if>
      <if test="record.highMixingMachineWeight != null" >
        high_mixing_machine_weight = #{record.highMixingMachineWeight,jdbcType=REAL},
      </if>
      <if test="record.matchingCoefficientPrecursors != null" >
        matching_coefficient_precursors = #{record.matchingCoefficientPrecursors,jdbcType=REAL},
      </if>
      <if test="record.matchingCoefficientLithiumCarbonate != null" >
        matching_coefficient_lithium_carbonate = #{record.matchingCoefficientLithiumCarbonate,jdbcType=REAL},
      </if>
      <if test="record.matchingCoefficientHopPocket != null" >
        matching_coefficient_hop_pocket = #{record.matchingCoefficientHopPocket,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info_anode_calculate_coefficient
    set code = #{record.code,jdbcType=TINYINT},
      bag_weight = #{record.bagWeight,jdbcType=REAL},
      bowl_fill_weight = #{record.bowlFillWeight,jdbcType=REAL},
      bowl_num = #{record.bowlNum,jdbcType=TINYINT},
      burning_loss_rate = #{record.burningLossRate,jdbcType=REAL},
      smash_weight = #{record.smashWeight,jdbcType=REAL},
      presintering_weight = #{record.presinteringWeight,jdbcType=REAL},
      second_sintering_weight = #{record.secondSinteringWeight,jdbcType=REAL},
      high_mixing_machine_weight = #{record.highMixingMachineWeight,jdbcType=REAL},
      matching_coefficient_precursors = #{record.matchingCoefficientPrecursors,jdbcType=REAL},
      matching_coefficient_lithium_carbonate = #{record.matchingCoefficientLithiumCarbonate,jdbcType=REAL},
      matching_coefficient_hop_pocket = #{record.matchingCoefficientHopPocket,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinchi.common.domain.BasicInfoAnodeCalculateCoefficient" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info_anode_calculate_coefficient
    <set >
      <if test="bagWeight != null" >
        bag_weight = #{bagWeight,jdbcType=REAL},
      </if>
      <if test="bowlFillWeight != null" >
        bowl_fill_weight = #{bowlFillWeight,jdbcType=REAL},
      </if>
      <if test="bowlNum != null" >
        bowl_num = #{bowlNum,jdbcType=TINYINT},
      </if>
      <if test="burningLossRate != null" >
        burning_loss_rate = #{burningLossRate,jdbcType=REAL},
      </if>
      <if test="smashWeight != null" >
        smash_weight = #{smashWeight,jdbcType=REAL},
      </if>
      <if test="presinteringWeight != null" >
        presintering_weight = #{presinteringWeight,jdbcType=REAL},
      </if>
      <if test="secondSinteringWeight != null" >
        second_sintering_weight = #{secondSinteringWeight,jdbcType=REAL},
      </if>
      <if test="highMixingMachineWeight != null" >
        high_mixing_machine_weight = #{highMixingMachineWeight,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientPrecursors != null" >
        matching_coefficient_precursors = #{matchingCoefficientPrecursors,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientLithiumCarbonate != null" >
        matching_coefficient_lithium_carbonate = #{matchingCoefficientLithiumCarbonate,jdbcType=REAL},
      </if>
      <if test="matchingCoefficientHopPocket != null" >
        matching_coefficient_hop_pocket = #{matchingCoefficientHopPocket,jdbcType=REAL},
      </if>
    </set>
    where code = #{code,jdbcType=TINYINT}
  </update>
</mapper>