<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinchi.common.mapper.BasicInfoAnodeCoefficientRateMapper">
    <resultMap id="BaseResultMap" type="com.jinchi.common.domain.BasicInfoAnodeCoefficientRate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        <constructor>
            <idArg column="code" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="production_code" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="precursors" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="lithium_carbonate" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="premix" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="production" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_a" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_b" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_c" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_d" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_e" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_f" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="coe_g" jdbcType="REAL" javaType="java.lang.Float"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        code, production_code, precursors, lithium_carbonate, premix, production, coe_a,
        coe_b, coe_c, coe_d, coe_e, coe_f, coe_g
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRateExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from basic_info_anode_coefficient_rate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        select
        <include refid="Base_Column_List"/>
        from basic_info_anode_coefficient_rate
        where code = #{code,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        delete from basic_info_anode_coefficient_rate
        where code = #{code,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRateExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        delete from basic_info_anode_coefficient_rate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="code" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into basic_info_anode_coefficient_rate (production_code, precursors, lithium_carbonate,
        premix, production, coe_a, coe_b,
        coe_c, coe_d, coe_e, coe_f,
        coe_g)
        values (#{productionCode,jdbcType=INTEGER}, #{precursors,jdbcType=REAL}, #{lithiumCarbonate,jdbcType=REAL},
        #{premix,jdbcType=REAL}, #{production,jdbcType=REAL}, #{coeA,jdbcType=REAL}, #{coeB,jdbcType=REAL},
        #{coeC,jdbcType=REAL}, #{coeD,jdbcType=REAL}, #{coeE,jdbcType=REAL}, #{coeF,jdbcType=REAL},
        #{coeG,jdbcType=REAL})
    </insert>
    <insert id="insertSelective" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="code" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into basic_info_anode_coefficient_rate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productionCode != null">
                production_code,
            </if>
            <if test="precursors != null">
                precursors,
            </if>
            <if test="lithiumCarbonate != null">
                lithium_carbonate,
            </if>
            <if test="premix != null">
                premix,
            </if>
            <if test="production != null">
                production,
            </if>
            <if test="coeA != null">
                coe_a,
            </if>
            <if test="coeB != null">
                coe_b,
            </if>
            <if test="coeC != null">
                coe_c,
            </if>
            <if test="coeD != null">
                coe_d,
            </if>
            <if test="coeE != null">
                coe_e,
            </if>
            <if test="coeF != null">
                coe_f,
            </if>
            <if test="coeG != null">
                coe_g,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productionCode != null">
                #{productionCode,jdbcType=INTEGER},
            </if>
            <if test="precursors != null">
                #{precursors,jdbcType=REAL},
            </if>
            <if test="lithiumCarbonate != null">
                #{lithiumCarbonate,jdbcType=REAL},
            </if>
            <if test="premix != null">
                #{premix,jdbcType=REAL},
            </if>
            <if test="production != null">
                #{production,jdbcType=REAL},
            </if>
            <if test="coeA != null">
                #{coeA,jdbcType=REAL},
            </if>
            <if test="coeB != null">
                #{coeB,jdbcType=REAL},
            </if>
            <if test="coeC != null">
                #{coeC,jdbcType=REAL},
            </if>
            <if test="coeD != null">
                #{coeD,jdbcType=REAL},
            </if>
            <if test="coeE != null">
                #{coeE,jdbcType=REAL},
            </if>
            <if test="coeF != null">
                #{coeF,jdbcType=REAL},
            </if>
            <if test="coeG != null">
                #{coeG,jdbcType=REAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRateExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        select count(*) from basic_info_anode_coefficient_rate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        update basic_info_anode_coefficient_rate
        <set>
            <if test="record.code != null">
                code = #{record.code,jdbcType=INTEGER},
            </if>
            <if test="record.productionCode != null">
                production_code = #{record.productionCode,jdbcType=INTEGER},
            </if>
            <if test="record.precursors != null">
                precursors = #{record.precursors,jdbcType=REAL},
            </if>
            <if test="record.lithiumCarbonate != null">
                lithium_carbonate = #{record.lithiumCarbonate,jdbcType=REAL},
            </if>
            <if test="record.premix != null">
                premix = #{record.premix,jdbcType=REAL},
            </if>
            <if test="record.production != null">
                production = #{record.production,jdbcType=REAL},
            </if>
            <if test="record.coeA != null">
                coe_a = #{record.coeA,jdbcType=REAL},
            </if>
            <if test="record.coeB != null">
                coe_b = #{record.coeB,jdbcType=REAL},
            </if>
            <if test="record.coeC != null">
                coe_c = #{record.coeC,jdbcType=REAL},
            </if>
            <if test="record.coeD != null">
                coe_d = #{record.coeD,jdbcType=REAL},
            </if>
            <if test="record.coeE != null">
                coe_e = #{record.coeE,jdbcType=REAL},
            </if>
            <if test="record.coeF != null">
                coe_f = #{record.coeF,jdbcType=REAL},
            </if>
            <if test="record.coeG != null">
                coe_g = #{record.coeG,jdbcType=REAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        update basic_info_anode_coefficient_rate
        set code = #{record.code,jdbcType=INTEGER},
        production_code = #{record.productionCode,jdbcType=INTEGER},
        precursors = #{record.precursors,jdbcType=REAL},
        lithium_carbonate = #{record.lithiumCarbonate,jdbcType=REAL},
        premix = #{record.premix,jdbcType=REAL},
        production = #{record.production,jdbcType=REAL},
        coe_a = #{record.coeA,jdbcType=REAL},
        coe_b = #{record.coeB,jdbcType=REAL},
        coe_c = #{record.coeC,jdbcType=REAL},
        coe_d = #{record.coeD,jdbcType=REAL},
        coe_e = #{record.coeE,jdbcType=REAL},
        coe_f = #{record.coeF,jdbcType=REAL},
        coe_g = #{record.coeG,jdbcType=REAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        update basic_info_anode_coefficient_rate
        <set>
            <if test="productionCode != null">
                production_code = #{productionCode,jdbcType=INTEGER},
            </if>
            <if test="precursors != null">
                precursors = #{precursors,jdbcType=REAL},
            </if>
            <if test="lithiumCarbonate != null">
                lithium_carbonate = #{lithiumCarbonate,jdbcType=REAL},
            </if>
            <if test="premix != null">
                premix = #{premix,jdbcType=REAL},
            </if>
            <if test="production != null">
                production = #{production,jdbcType=REAL},
            </if>
            <if test="coeA != null">
                coe_a = #{coeA,jdbcType=REAL},
            </if>
            <if test="coeB != null">
                coe_b = #{coeB,jdbcType=REAL},
            </if>
            <if test="coeC != null">
                coe_c = #{coeC,jdbcType=REAL},
            </if>
            <if test="coeD != null">
                coe_d = #{coeD,jdbcType=REAL},
            </if>
            <if test="coeE != null">
                coe_e = #{coeE,jdbcType=REAL},
            </if>
            <if test="coeF != null">
                coe_f = #{coeF,jdbcType=REAL},
            </if>
            <if test="coeG != null">
                coe_g = #{coeG,jdbcType=REAL},
            </if>
        </set>
        where code = #{code,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jinchi.common.domain.BasicInfoAnodeCoefficientRate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jun 20 18:59:03 CST 2020.
        -->
        update basic_info_anode_coefficient_rate
        set production_code = #{productionCode,jdbcType=INTEGER},
        precursors = #{precursors,jdbcType=REAL},
        lithium_carbonate = #{lithiumCarbonate,jdbcType=REAL},
        premix = #{premix,jdbcType=REAL},
        production = #{production,jdbcType=REAL},
        coe_a = #{coeA,jdbcType=REAL},
        coe_b = #{coeB,jdbcType=REAL},
        coe_c = #{coeC,jdbcType=REAL},
        coe_d = #{coeD,jdbcType=REAL},
        coe_e = #{coeE,jdbcType=REAL},
        coe_f = #{coeF,jdbcType=REAL},
        coe_g = #{coeG,jdbcType=REAL}
        where code = #{code,jdbcType=INTEGER}
    </update>

    <select id="mySelect" resultType="com.jinchi.common.dto.anode.AnodeCoefficientRateDTO">
    SELECT a.*,b.name
    FROM basic_info_anode_coefficient_rate a, basic_info_anode_production_type b
    WHERE a.production_code = b.`code`
  </select>
</mapper>