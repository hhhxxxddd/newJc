package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class BasicInfoAnodeBurningLossRateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public BasicInfoAnodeBurningLossRateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIsNull() {
            addCriterion("production_code is null");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIsNotNull() {
            addCriterion("production_code is not null");
            return (Criteria) this;
        }

        public Criteria andProductionCodeEqualTo(Integer value) {
            addCriterion("production_code =", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotEqualTo(Integer value) {
            addCriterion("production_code <>", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeGreaterThan(Integer value) {
            addCriterion("production_code >", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("production_code >=", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeLessThan(Integer value) {
            addCriterion("production_code <", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeLessThanOrEqualTo(Integer value) {
            addCriterion("production_code <=", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIn(List<Integer> values) {
            addCriterion("production_code in", values, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotIn(List<Integer> values) {
            addCriterion("production_code not in", values, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeBetween(Integer value1, Integer value2) {
            addCriterion("production_code between", value1, value2, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("production_code not between", value1, value2, "productionCode");
            return (Criteria) this;
        }

        public Criteria andLossrate1IsNull() {
            addCriterion("lossrate1 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate1IsNotNull() {
            addCriterion("lossrate1 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate1EqualTo(Float value) {
            addCriterion("lossrate1 =", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1NotEqualTo(Float value) {
            addCriterion("lossrate1 <>", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1GreaterThan(Float value) {
            addCriterion("lossrate1 >", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate1 >=", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1LessThan(Float value) {
            addCriterion("lossrate1 <", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1LessThanOrEqualTo(Float value) {
            addCriterion("lossrate1 <=", value, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1In(List<Float> values) {
            addCriterion("lossrate1 in", values, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1NotIn(List<Float> values) {
            addCriterion("lossrate1 not in", values, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1Between(Float value1, Float value2) {
            addCriterion("lossrate1 between", value1, value2, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate1NotBetween(Float value1, Float value2) {
            addCriterion("lossrate1 not between", value1, value2, "lossrate1");
            return (Criteria) this;
        }

        public Criteria andLossrate2IsNull() {
            addCriterion("lossrate2 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate2IsNotNull() {
            addCriterion("lossrate2 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate2EqualTo(Float value) {
            addCriterion("lossrate2 =", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2NotEqualTo(Float value) {
            addCriterion("lossrate2 <>", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2GreaterThan(Float value) {
            addCriterion("lossrate2 >", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate2 >=", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2LessThan(Float value) {
            addCriterion("lossrate2 <", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2LessThanOrEqualTo(Float value) {
            addCriterion("lossrate2 <=", value, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2In(List<Float> values) {
            addCriterion("lossrate2 in", values, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2NotIn(List<Float> values) {
            addCriterion("lossrate2 not in", values, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2Between(Float value1, Float value2) {
            addCriterion("lossrate2 between", value1, value2, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate2NotBetween(Float value1, Float value2) {
            addCriterion("lossrate2 not between", value1, value2, "lossrate2");
            return (Criteria) this;
        }

        public Criteria andLossrate3IsNull() {
            addCriterion("lossrate3 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate3IsNotNull() {
            addCriterion("lossrate3 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate3EqualTo(Float value) {
            addCriterion("lossrate3 =", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3NotEqualTo(Float value) {
            addCriterion("lossrate3 <>", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3GreaterThan(Float value) {
            addCriterion("lossrate3 >", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate3 >=", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3LessThan(Float value) {
            addCriterion("lossrate3 <", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3LessThanOrEqualTo(Float value) {
            addCriterion("lossrate3 <=", value, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3In(List<Float> values) {
            addCriterion("lossrate3 in", values, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3NotIn(List<Float> values) {
            addCriterion("lossrate3 not in", values, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3Between(Float value1, Float value2) {
            addCriterion("lossrate3 between", value1, value2, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate3NotBetween(Float value1, Float value2) {
            addCriterion("lossrate3 not between", value1, value2, "lossrate3");
            return (Criteria) this;
        }

        public Criteria andLossrate4IsNull() {
            addCriterion("lossrate4 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate4IsNotNull() {
            addCriterion("lossrate4 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate4EqualTo(Float value) {
            addCriterion("lossrate4 =", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4NotEqualTo(Float value) {
            addCriterion("lossrate4 <>", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4GreaterThan(Float value) {
            addCriterion("lossrate4 >", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate4 >=", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4LessThan(Float value) {
            addCriterion("lossrate4 <", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4LessThanOrEqualTo(Float value) {
            addCriterion("lossrate4 <=", value, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4In(List<Float> values) {
            addCriterion("lossrate4 in", values, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4NotIn(List<Float> values) {
            addCriterion("lossrate4 not in", values, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4Between(Float value1, Float value2) {
            addCriterion("lossrate4 between", value1, value2, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate4NotBetween(Float value1, Float value2) {
            addCriterion("lossrate4 not between", value1, value2, "lossrate4");
            return (Criteria) this;
        }

        public Criteria andLossrate5IsNull() {
            addCriterion("lossrate5 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate5IsNotNull() {
            addCriterion("lossrate5 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate5EqualTo(Float value) {
            addCriterion("lossrate5 =", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5NotEqualTo(Float value) {
            addCriterion("lossrate5 <>", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5GreaterThan(Float value) {
            addCriterion("lossrate5 >", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate5 >=", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5LessThan(Float value) {
            addCriterion("lossrate5 <", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5LessThanOrEqualTo(Float value) {
            addCriterion("lossrate5 <=", value, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5In(List<Float> values) {
            addCriterion("lossrate5 in", values, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5NotIn(List<Float> values) {
            addCriterion("lossrate5 not in", values, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5Between(Float value1, Float value2) {
            addCriterion("lossrate5 between", value1, value2, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate5NotBetween(Float value1, Float value2) {
            addCriterion("lossrate5 not between", value1, value2, "lossrate5");
            return (Criteria) this;
        }

        public Criteria andLossrate6IsNull() {
            addCriterion("lossrate6 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate6IsNotNull() {
            addCriterion("lossrate6 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate6EqualTo(Float value) {
            addCriterion("lossrate6 =", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6NotEqualTo(Float value) {
            addCriterion("lossrate6 <>", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6GreaterThan(Float value) {
            addCriterion("lossrate6 >", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate6 >=", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6LessThan(Float value) {
            addCriterion("lossrate6 <", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6LessThanOrEqualTo(Float value) {
            addCriterion("lossrate6 <=", value, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6In(List<Float> values) {
            addCriterion("lossrate6 in", values, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6NotIn(List<Float> values) {
            addCriterion("lossrate6 not in", values, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6Between(Float value1, Float value2) {
            addCriterion("lossrate6 between", value1, value2, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate6NotBetween(Float value1, Float value2) {
            addCriterion("lossrate6 not between", value1, value2, "lossrate6");
            return (Criteria) this;
        }

        public Criteria andLossrate7IsNull() {
            addCriterion("lossrate7 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate7IsNotNull() {
            addCriterion("lossrate7 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate7EqualTo(Float value) {
            addCriterion("lossrate7 =", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7NotEqualTo(Float value) {
            addCriterion("lossrate7 <>", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7GreaterThan(Float value) {
            addCriterion("lossrate7 >", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate7 >=", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7LessThan(Float value) {
            addCriterion("lossrate7 <", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7LessThanOrEqualTo(Float value) {
            addCriterion("lossrate7 <=", value, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7In(List<Float> values) {
            addCriterion("lossrate7 in", values, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7NotIn(List<Float> values) {
            addCriterion("lossrate7 not in", values, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7Between(Float value1, Float value2) {
            addCriterion("lossrate7 between", value1, value2, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate7NotBetween(Float value1, Float value2) {
            addCriterion("lossrate7 not between", value1, value2, "lossrate7");
            return (Criteria) this;
        }

        public Criteria andLossrate8IsNull() {
            addCriterion("lossrate8 is null");
            return (Criteria) this;
        }

        public Criteria andLossrate8IsNotNull() {
            addCriterion("lossrate8 is not null");
            return (Criteria) this;
        }

        public Criteria andLossrate8EqualTo(Float value) {
            addCriterion("lossrate8 =", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8NotEqualTo(Float value) {
            addCriterion("lossrate8 <>", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8GreaterThan(Float value) {
            addCriterion("lossrate8 >", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8GreaterThanOrEqualTo(Float value) {
            addCriterion("lossrate8 >=", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8LessThan(Float value) {
            addCriterion("lossrate8 <", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8LessThanOrEqualTo(Float value) {
            addCriterion("lossrate8 <=", value, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8In(List<Float> values) {
            addCriterion("lossrate8 in", values, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8NotIn(List<Float> values) {
            addCriterion("lossrate8 not in", values, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8Between(Float value1, Float value2) {
            addCriterion("lossrate8 between", value1, value2, "lossrate8");
            return (Criteria) this;
        }

        public Criteria andLossrate8NotBetween(Float value1, Float value2) {
            addCriterion("lossrate8 not between", value1, value2, "lossrate8");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 21 09:56:53 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_burning_loss_rate
     *
     * @mbggenerated Sun Jun 21 09:56:53 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}