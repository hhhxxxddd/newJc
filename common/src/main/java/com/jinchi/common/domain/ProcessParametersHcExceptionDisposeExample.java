package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class ProcessParametersHcExceptionDisposeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public ProcessParametersHcExceptionDisposeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Long value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Long value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Long value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Long value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Long value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Long> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Long> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Long value1, Long value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Long value1, Long value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIsNull() {
            addCriterion("process_code is null");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIsNotNull() {
            addCriterion("process_code is not null");
            return (Criteria) this;
        }

        public Criteria andProcessCodeEqualTo(Long value) {
            addCriterion("process_code =", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotEqualTo(Long value) {
            addCriterion("process_code <>", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeGreaterThan(Long value) {
            addCriterion("process_code >", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("process_code >=", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeLessThan(Long value) {
            addCriterion("process_code <", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeLessThanOrEqualTo(Long value) {
            addCriterion("process_code <=", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIn(List<Long> values) {
            addCriterion("process_code in", values, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotIn(List<Long> values) {
            addCriterion("process_code not in", values, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeBetween(Long value1, Long value2) {
            addCriterion("process_code between", value1, value2, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotBetween(Long value1, Long value2) {
            addCriterion("process_code not between", value1, value2, "processCode");
            return (Criteria) this;
        }

        public Criteria andPhenomenonIsNull() {
            addCriterion("phenomenon is null");
            return (Criteria) this;
        }

        public Criteria andPhenomenonIsNotNull() {
            addCriterion("phenomenon is not null");
            return (Criteria) this;
        }

        public Criteria andPhenomenonEqualTo(String value) {
            addCriterion("phenomenon =", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonNotEqualTo(String value) {
            addCriterion("phenomenon <>", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonGreaterThan(String value) {
            addCriterion("phenomenon >", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonGreaterThanOrEqualTo(String value) {
            addCriterion("phenomenon >=", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonLessThan(String value) {
            addCriterion("phenomenon <", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonLessThanOrEqualTo(String value) {
            addCriterion("phenomenon <=", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonLike(String value) {
            addCriterion("phenomenon like", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonNotLike(String value) {
            addCriterion("phenomenon not like", value, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonIn(List<String> values) {
            addCriterion("phenomenon in", values, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonNotIn(List<String> values) {
            addCriterion("phenomenon not in", values, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonBetween(String value1, String value2) {
            addCriterion("phenomenon between", value1, value2, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andPhenomenonNotBetween(String value1, String value2) {
            addCriterion("phenomenon not between", value1, value2, "phenomenon");
            return (Criteria) this;
        }

        public Criteria andReasonIsNull() {
            addCriterion("reason is null");
            return (Criteria) this;
        }

        public Criteria andReasonIsNotNull() {
            addCriterion("reason is not null");
            return (Criteria) this;
        }

        public Criteria andReasonEqualTo(String value) {
            addCriterion("reason =", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotEqualTo(String value) {
            addCriterion("reason <>", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThan(String value) {
            addCriterion("reason >", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThanOrEqualTo(String value) {
            addCriterion("reason >=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThan(String value) {
            addCriterion("reason <", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThanOrEqualTo(String value) {
            addCriterion("reason <=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLike(String value) {
            addCriterion("reason like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotLike(String value) {
            addCriterion("reason not like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonIn(List<String> values) {
            addCriterion("reason in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotIn(List<String> values) {
            addCriterion("reason not in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonBetween(String value1, String value2) {
            addCriterion("reason between", value1, value2, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotBetween(String value1, String value2) {
            addCriterion("reason not between", value1, value2, "reason");
            return (Criteria) this;
        }

        public Criteria andProcessModeIsNull() {
            addCriterion("process_mode is null");
            return (Criteria) this;
        }

        public Criteria andProcessModeIsNotNull() {
            addCriterion("process_mode is not null");
            return (Criteria) this;
        }

        public Criteria andProcessModeEqualTo(String value) {
            addCriterion("process_mode =", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeNotEqualTo(String value) {
            addCriterion("process_mode <>", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeGreaterThan(String value) {
            addCriterion("process_mode >", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeGreaterThanOrEqualTo(String value) {
            addCriterion("process_mode >=", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeLessThan(String value) {
            addCriterion("process_mode <", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeLessThanOrEqualTo(String value) {
            addCriterion("process_mode <=", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeLike(String value) {
            addCriterion("process_mode like", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeNotLike(String value) {
            addCriterion("process_mode not like", value, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeIn(List<String> values) {
            addCriterion("process_mode in", values, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeNotIn(List<String> values) {
            addCriterion("process_mode not in", values, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeBetween(String value1, String value2) {
            addCriterion("process_mode between", value1, value2, "processMode");
            return (Criteria) this;
        }

        public Criteria andProcessModeNotBetween(String value1, String value2) {
            addCriterion("process_mode not between", value1, value2, "processMode");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessIsNull() {
            addCriterion("related_production_process is null");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessIsNotNull() {
            addCriterion("related_production_process is not null");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessEqualTo(String value) {
            addCriterion("related_production_process =", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessNotEqualTo(String value) {
            addCriterion("related_production_process <>", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessGreaterThan(String value) {
            addCriterion("related_production_process >", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessGreaterThanOrEqualTo(String value) {
            addCriterion("related_production_process >=", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessLessThan(String value) {
            addCriterion("related_production_process <", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessLessThanOrEqualTo(String value) {
            addCriterion("related_production_process <=", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessLike(String value) {
            addCriterion("related_production_process like", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessNotLike(String value) {
            addCriterion("related_production_process not like", value, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessIn(List<String> values) {
            addCriterion("related_production_process in", values, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessNotIn(List<String> values) {
            addCriterion("related_production_process not in", values, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessBetween(String value1, String value2) {
            addCriterion("related_production_process between", value1, value2, "relatedProductionProcess");
            return (Criteria) this;
        }

        public Criteria andRelatedProductionProcessNotBetween(String value1, String value2) {
            addCriterion("related_production_process not between", value1, value2, "relatedProductionProcess");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_hc_exception_dispose
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}