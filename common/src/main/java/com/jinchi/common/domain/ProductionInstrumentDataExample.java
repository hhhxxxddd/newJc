package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ProductionInstrumentDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public ProductionInstrumentDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Long value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Long value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Long value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Long value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Long value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Long> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Long> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Long value1, Long value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Long value1, Long value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCellNumIsNull() {
            addCriterion("cell_num is null");
            return (Criteria) this;
        }

        public Criteria andCellNumIsNotNull() {
            addCriterion("cell_num is not null");
            return (Criteria) this;
        }

        public Criteria andCellNumEqualTo(String value) {
            addCriterion("cell_num =", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumNotEqualTo(String value) {
            addCriterion("cell_num <>", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumGreaterThan(String value) {
            addCriterion("cell_num >", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumGreaterThanOrEqualTo(String value) {
            addCriterion("cell_num >=", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumLessThan(String value) {
            addCriterion("cell_num <", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumLessThanOrEqualTo(String value) {
            addCriterion("cell_num <=", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumLike(String value) {
            addCriterion("cell_num like", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumNotLike(String value) {
            addCriterion("cell_num not like", value, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumIn(List<String> values) {
            addCriterion("cell_num in", values, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumNotIn(List<String> values) {
            addCriterion("cell_num not in", values, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumBetween(String value1, String value2) {
            addCriterion("cell_num between", value1, value2, "cellNum");
            return (Criteria) this;
        }

        public Criteria andCellNumNotBetween(String value1, String value2) {
            addCriterion("cell_num not between", value1, value2, "cellNum");
            return (Criteria) this;
        }

        public Criteria andSampleTimeIsNull() {
            addCriterion("sample_time is null");
            return (Criteria) this;
        }

        public Criteria andSampleTimeIsNotNull() {
            addCriterion("sample_time is not null");
            return (Criteria) this;
        }

        public Criteria andSampleTimeEqualTo(Date value) {
            addCriterion("sample_time =", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeNotEqualTo(Date value) {
            addCriterion("sample_time <>", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeGreaterThan(Date value) {
            addCriterion("sample_time >", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("sample_time >=", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeLessThan(Date value) {
            addCriterion("sample_time <", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeLessThanOrEqualTo(Date value) {
            addCriterion("sample_time <=", value, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeIn(List<Date> values) {
            addCriterion("sample_time in", values, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeNotIn(List<Date> values) {
            addCriterion("sample_time not in", values, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeBetween(Date value1, Date value2) {
            addCriterion("sample_time between", value1, value2, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andSampleTimeNotBetween(Date value1, Date value2) {
            addCriterion("sample_time not between", value1, value2, "sampleTime");
            return (Criteria) this;
        }

        public Criteria andPhValueIsNull() {
            addCriterion("ph_value is null");
            return (Criteria) this;
        }

        public Criteria andPhValueIsNotNull() {
            addCriterion("ph_value is not null");
            return (Criteria) this;
        }

        public Criteria andPhValueEqualTo(Float value) {
            addCriterion("ph_value =", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueNotEqualTo(Float value) {
            addCriterion("ph_value <>", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueGreaterThan(Float value) {
            addCriterion("ph_value >", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueGreaterThanOrEqualTo(Float value) {
            addCriterion("ph_value >=", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueLessThan(Float value) {
            addCriterion("ph_value <", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueLessThanOrEqualTo(Float value) {
            addCriterion("ph_value <=", value, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueIn(List<Float> values) {
            addCriterion("ph_value in", values, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueNotIn(List<Float> values) {
            addCriterion("ph_value not in", values, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueBetween(Float value1, Float value2) {
            addCriterion("ph_value between", value1, value2, "phValue");
            return (Criteria) this;
        }

        public Criteria andPhValueNotBetween(Float value1, Float value2) {
            addCriterion("ph_value not between", value1, value2, "phValue");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(Float value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(Float value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(Float value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(Float value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(Float value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(Float value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<Float> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<Float> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(Float value1, Float value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(Float value1, Float value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1IsNull() {
            addCriterion("salt_flow1 is null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1IsNotNull() {
            addCriterion("salt_flow1 is not null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1EqualTo(Float value) {
            addCriterion("salt_flow1 =", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1NotEqualTo(Float value) {
            addCriterion("salt_flow1 <>", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1GreaterThan(Float value) {
            addCriterion("salt_flow1 >", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1GreaterThanOrEqualTo(Float value) {
            addCriterion("salt_flow1 >=", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1LessThan(Float value) {
            addCriterion("salt_flow1 <", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1LessThanOrEqualTo(Float value) {
            addCriterion("salt_flow1 <=", value, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1In(List<Float> values) {
            addCriterion("salt_flow1 in", values, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1NotIn(List<Float> values) {
            addCriterion("salt_flow1 not in", values, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1Between(Float value1, Float value2) {
            addCriterion("salt_flow1 between", value1, value2, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow1NotBetween(Float value1, Float value2) {
            addCriterion("salt_flow1 not between", value1, value2, "saltFlow1");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2IsNull() {
            addCriterion("salt_flow2 is null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2IsNotNull() {
            addCriterion("salt_flow2 is not null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2EqualTo(Float value) {
            addCriterion("salt_flow2 =", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2NotEqualTo(Float value) {
            addCriterion("salt_flow2 <>", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2GreaterThan(Float value) {
            addCriterion("salt_flow2 >", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2GreaterThanOrEqualTo(Float value) {
            addCriterion("salt_flow2 >=", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2LessThan(Float value) {
            addCriterion("salt_flow2 <", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2LessThanOrEqualTo(Float value) {
            addCriterion("salt_flow2 <=", value, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2In(List<Float> values) {
            addCriterion("salt_flow2 in", values, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2NotIn(List<Float> values) {
            addCriterion("salt_flow2 not in", values, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2Between(Float value1, Float value2) {
            addCriterion("salt_flow2 between", value1, value2, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow2NotBetween(Float value1, Float value2) {
            addCriterion("salt_flow2 not between", value1, value2, "saltFlow2");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3IsNull() {
            addCriterion("salt_flow3 is null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3IsNotNull() {
            addCriterion("salt_flow3 is not null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3EqualTo(Float value) {
            addCriterion("salt_flow3 =", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3NotEqualTo(Float value) {
            addCriterion("salt_flow3 <>", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3GreaterThan(Float value) {
            addCriterion("salt_flow3 >", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3GreaterThanOrEqualTo(Float value) {
            addCriterion("salt_flow3 >=", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3LessThan(Float value) {
            addCriterion("salt_flow3 <", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3LessThanOrEqualTo(Float value) {
            addCriterion("salt_flow3 <=", value, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3In(List<Float> values) {
            addCriterion("salt_flow3 in", values, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3NotIn(List<Float> values) {
            addCriterion("salt_flow3 not in", values, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3Between(Float value1, Float value2) {
            addCriterion("salt_flow3 between", value1, value2, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow3NotBetween(Float value1, Float value2) {
            addCriterion("salt_flow3 not between", value1, value2, "saltFlow3");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4IsNull() {
            addCriterion("salt_flow4 is null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4IsNotNull() {
            addCriterion("salt_flow4 is not null");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4EqualTo(Float value) {
            addCriterion("salt_flow4 =", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4NotEqualTo(Float value) {
            addCriterion("salt_flow4 <>", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4GreaterThan(Float value) {
            addCriterion("salt_flow4 >", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4GreaterThanOrEqualTo(Float value) {
            addCriterion("salt_flow4 >=", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4LessThan(Float value) {
            addCriterion("salt_flow4 <", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4LessThanOrEqualTo(Float value) {
            addCriterion("salt_flow4 <=", value, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4In(List<Float> values) {
            addCriterion("salt_flow4 in", values, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4NotIn(List<Float> values) {
            addCriterion("salt_flow4 not in", values, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4Between(Float value1, Float value2) {
            addCriterion("salt_flow4 between", value1, value2, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andSaltFlow4NotBetween(Float value1, Float value2) {
            addCriterion("salt_flow4 not between", value1, value2, "saltFlow4");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1IsNull() {
            addCriterion("ammonia_bases1 is null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1IsNotNull() {
            addCriterion("ammonia_bases1 is not null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1EqualTo(Float value) {
            addCriterion("ammonia_bases1 =", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1NotEqualTo(Float value) {
            addCriterion("ammonia_bases1 <>", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1GreaterThan(Float value) {
            addCriterion("ammonia_bases1 >", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1GreaterThanOrEqualTo(Float value) {
            addCriterion("ammonia_bases1 >=", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1LessThan(Float value) {
            addCriterion("ammonia_bases1 <", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1LessThanOrEqualTo(Float value) {
            addCriterion("ammonia_bases1 <=", value, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1In(List<Float> values) {
            addCriterion("ammonia_bases1 in", values, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1NotIn(List<Float> values) {
            addCriterion("ammonia_bases1 not in", values, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1Between(Float value1, Float value2) {
            addCriterion("ammonia_bases1 between", value1, value2, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases1NotBetween(Float value1, Float value2) {
            addCriterion("ammonia_bases1 not between", value1, value2, "ammoniaBases1");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2IsNull() {
            addCriterion("ammonia_bases2 is null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2IsNotNull() {
            addCriterion("ammonia_bases2 is not null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2EqualTo(Float value) {
            addCriterion("ammonia_bases2 =", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2NotEqualTo(Float value) {
            addCriterion("ammonia_bases2 <>", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2GreaterThan(Float value) {
            addCriterion("ammonia_bases2 >", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2GreaterThanOrEqualTo(Float value) {
            addCriterion("ammonia_bases2 >=", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2LessThan(Float value) {
            addCriterion("ammonia_bases2 <", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2LessThanOrEqualTo(Float value) {
            addCriterion("ammonia_bases2 <=", value, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2In(List<Float> values) {
            addCriterion("ammonia_bases2 in", values, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2NotIn(List<Float> values) {
            addCriterion("ammonia_bases2 not in", values, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2Between(Float value1, Float value2) {
            addCriterion("ammonia_bases2 between", value1, value2, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaBases2NotBetween(Float value1, Float value2) {
            addCriterion("ammonia_bases2 not between", value1, value2, "ammoniaBases2");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterIsNull() {
            addCriterion("ammonia_water is null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterIsNotNull() {
            addCriterion("ammonia_water is not null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterEqualTo(Float value) {
            addCriterion("ammonia_water =", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterNotEqualTo(Float value) {
            addCriterion("ammonia_water <>", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterGreaterThan(Float value) {
            addCriterion("ammonia_water >", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterGreaterThanOrEqualTo(Float value) {
            addCriterion("ammonia_water >=", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterLessThan(Float value) {
            addCriterion("ammonia_water <", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterLessThanOrEqualTo(Float value) {
            addCriterion("ammonia_water <=", value, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterIn(List<Float> values) {
            addCriterion("ammonia_water in", values, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterNotIn(List<Float> values) {
            addCriterion("ammonia_water not in", values, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterBetween(Float value1, Float value2) {
            addCriterion("ammonia_water between", value1, value2, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaWaterNotBetween(Float value1, Float value2) {
            addCriterion("ammonia_water not between", value1, value2, "ammoniaWater");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasIsNull() {
            addCriterion("ammonia_gas is null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasIsNotNull() {
            addCriterion("ammonia_gas is not null");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasEqualTo(Float value) {
            addCriterion("ammonia_gas =", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasNotEqualTo(Float value) {
            addCriterion("ammonia_gas <>", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasGreaterThan(Float value) {
            addCriterion("ammonia_gas >", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasGreaterThanOrEqualTo(Float value) {
            addCriterion("ammonia_gas >=", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasLessThan(Float value) {
            addCriterion("ammonia_gas <", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasLessThanOrEqualTo(Float value) {
            addCriterion("ammonia_gas <=", value, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasIn(List<Float> values) {
            addCriterion("ammonia_gas in", values, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasNotIn(List<Float> values) {
            addCriterion("ammonia_gas not in", values, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasBetween(Float value1, Float value2) {
            addCriterion("ammonia_gas between", value1, value2, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andAmmoniaGasNotBetween(Float value1, Float value2) {
            addCriterion("ammonia_gas not between", value1, value2, "ammoniaGas");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentIsNull() {
            addCriterion("solid_containing_content is null");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentIsNotNull() {
            addCriterion("solid_containing_content is not null");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentEqualTo(Float value) {
            addCriterion("solid_containing_content =", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentNotEqualTo(Float value) {
            addCriterion("solid_containing_content <>", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentGreaterThan(Float value) {
            addCriterion("solid_containing_content >", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentGreaterThanOrEqualTo(Float value) {
            addCriterion("solid_containing_content >=", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentLessThan(Float value) {
            addCriterion("solid_containing_content <", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentLessThanOrEqualTo(Float value) {
            addCriterion("solid_containing_content <=", value, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentIn(List<Float> values) {
            addCriterion("solid_containing_content in", values, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentNotIn(List<Float> values) {
            addCriterion("solid_containing_content not in", values, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentBetween(Float value1, Float value2) {
            addCriterion("solid_containing_content between", value1, value2, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andSolidContainingContentNotBetween(Float value1, Float value2) {
            addCriterion("solid_containing_content not between", value1, value2, "solidContainingContent");
            return (Criteria) this;
        }

        public Criteria andTransducerShowIsNull() {
            addCriterion("transducer_show is null");
            return (Criteria) this;
        }

        public Criteria andTransducerShowIsNotNull() {
            addCriterion("transducer_show is not null");
            return (Criteria) this;
        }

        public Criteria andTransducerShowEqualTo(Float value) {
            addCriterion("transducer_show =", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowNotEqualTo(Float value) {
            addCriterion("transducer_show <>", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowGreaterThan(Float value) {
            addCriterion("transducer_show >", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowGreaterThanOrEqualTo(Float value) {
            addCriterion("transducer_show >=", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowLessThan(Float value) {
            addCriterion("transducer_show <", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowLessThanOrEqualTo(Float value) {
            addCriterion("transducer_show <=", value, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowIn(List<Float> values) {
            addCriterion("transducer_show in", values, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowNotIn(List<Float> values) {
            addCriterion("transducer_show not in", values, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowBetween(Float value1, Float value2) {
            addCriterion("transducer_show between", value1, value2, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andTransducerShowNotBetween(Float value1, Float value2) {
            addCriterion("transducer_show not between", value1, value2, "transducerShow");
            return (Criteria) this;
        }

        public Criteria andMeasured3cIsNull() {
            addCriterion("measured_3c is null");
            return (Criteria) this;
        }

        public Criteria andMeasured3cIsNotNull() {
            addCriterion("measured_3c is not null");
            return (Criteria) this;
        }

        public Criteria andMeasured3cEqualTo(Float value) {
            addCriterion("measured_3c =", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cNotEqualTo(Float value) {
            addCriterion("measured_3c <>", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cGreaterThan(Float value) {
            addCriterion("measured_3c >", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cGreaterThanOrEqualTo(Float value) {
            addCriterion("measured_3c >=", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cLessThan(Float value) {
            addCriterion("measured_3c <", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cLessThanOrEqualTo(Float value) {
            addCriterion("measured_3c <=", value, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cIn(List<Float> values) {
            addCriterion("measured_3c in", values, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cNotIn(List<Float> values) {
            addCriterion("measured_3c not in", values, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cBetween(Float value1, Float value2) {
            addCriterion("measured_3c between", value1, value2, "measured3c");
            return (Criteria) this;
        }

        public Criteria andMeasured3cNotBetween(Float value1, Float value2) {
            addCriterion("measured_3c not between", value1, value2, "measured3c");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table production_instrument_data
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}