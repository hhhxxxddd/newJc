package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class BasicInfoAnodeCoefficientRateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public BasicInfoAnodeCoefficientRateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIsNull() {
            addCriterion("production_code is null");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIsNotNull() {
            addCriterion("production_code is not null");
            return (Criteria) this;
        }

        public Criteria andProductionCodeEqualTo(Integer value) {
            addCriterion("production_code =", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotEqualTo(Integer value) {
            addCriterion("production_code <>", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeGreaterThan(Integer value) {
            addCriterion("production_code >", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("production_code >=", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeLessThan(Integer value) {
            addCriterion("production_code <", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeLessThanOrEqualTo(Integer value) {
            addCriterion("production_code <=", value, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeIn(List<Integer> values) {
            addCriterion("production_code in", values, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotIn(List<Integer> values) {
            addCriterion("production_code not in", values, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeBetween(Integer value1, Integer value2) {
            addCriterion("production_code between", value1, value2, "productionCode");
            return (Criteria) this;
        }

        public Criteria andProductionCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("production_code not between", value1, value2, "productionCode");
            return (Criteria) this;
        }

        public Criteria andPrecursorsIsNull() {
            addCriterion("precursors is null");
            return (Criteria) this;
        }

        public Criteria andPrecursorsIsNotNull() {
            addCriterion("precursors is not null");
            return (Criteria) this;
        }

        public Criteria andPrecursorsEqualTo(Float value) {
            addCriterion("precursors =", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsNotEqualTo(Float value) {
            addCriterion("precursors <>", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsGreaterThan(Float value) {
            addCriterion("precursors >", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsGreaterThanOrEqualTo(Float value) {
            addCriterion("precursors >=", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsLessThan(Float value) {
            addCriterion("precursors <", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsLessThanOrEqualTo(Float value) {
            addCriterion("precursors <=", value, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsIn(List<Float> values) {
            addCriterion("precursors in", values, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsNotIn(List<Float> values) {
            addCriterion("precursors not in", values, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsBetween(Float value1, Float value2) {
            addCriterion("precursors between", value1, value2, "precursors");
            return (Criteria) this;
        }

        public Criteria andPrecursorsNotBetween(Float value1, Float value2) {
            addCriterion("precursors not between", value1, value2, "precursors");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateIsNull() {
            addCriterion("lithium_carbonate is null");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateIsNotNull() {
            addCriterion("lithium_carbonate is not null");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateEqualTo(Float value) {
            addCriterion("lithium_carbonate =", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateNotEqualTo(Float value) {
            addCriterion("lithium_carbonate <>", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateGreaterThan(Float value) {
            addCriterion("lithium_carbonate >", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateGreaterThanOrEqualTo(Float value) {
            addCriterion("lithium_carbonate >=", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateLessThan(Float value) {
            addCriterion("lithium_carbonate <", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateLessThanOrEqualTo(Float value) {
            addCriterion("lithium_carbonate <=", value, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateIn(List<Float> values) {
            addCriterion("lithium_carbonate in", values, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateNotIn(List<Float> values) {
            addCriterion("lithium_carbonate not in", values, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateBetween(Float value1, Float value2) {
            addCriterion("lithium_carbonate between", value1, value2, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andLithiumCarbonateNotBetween(Float value1, Float value2) {
            addCriterion("lithium_carbonate not between", value1, value2, "lithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andPremixIsNull() {
            addCriterion("premix is null");
            return (Criteria) this;
        }

        public Criteria andPremixIsNotNull() {
            addCriterion("premix is not null");
            return (Criteria) this;
        }

        public Criteria andPremixEqualTo(Float value) {
            addCriterion("premix =", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixNotEqualTo(Float value) {
            addCriterion("premix <>", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixGreaterThan(Float value) {
            addCriterion("premix >", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixGreaterThanOrEqualTo(Float value) {
            addCriterion("premix >=", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixLessThan(Float value) {
            addCriterion("premix <", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixLessThanOrEqualTo(Float value) {
            addCriterion("premix <=", value, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixIn(List<Float> values) {
            addCriterion("premix in", values, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixNotIn(List<Float> values) {
            addCriterion("premix not in", values, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixBetween(Float value1, Float value2) {
            addCriterion("premix between", value1, value2, "premix");
            return (Criteria) this;
        }

        public Criteria andPremixNotBetween(Float value1, Float value2) {
            addCriterion("premix not between", value1, value2, "premix");
            return (Criteria) this;
        }

        public Criteria andProductionIsNull() {
            addCriterion("production is null");
            return (Criteria) this;
        }

        public Criteria andProductionIsNotNull() {
            addCriterion("production is not null");
            return (Criteria) this;
        }

        public Criteria andProductionEqualTo(Float value) {
            addCriterion("production =", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionNotEqualTo(Float value) {
            addCriterion("production <>", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionGreaterThan(Float value) {
            addCriterion("production >", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionGreaterThanOrEqualTo(Float value) {
            addCriterion("production >=", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionLessThan(Float value) {
            addCriterion("production <", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionLessThanOrEqualTo(Float value) {
            addCriterion("production <=", value, "production");
            return (Criteria) this;
        }

        public Criteria andProductionIn(List<Float> values) {
            addCriterion("production in", values, "production");
            return (Criteria) this;
        }

        public Criteria andProductionNotIn(List<Float> values) {
            addCriterion("production not in", values, "production");
            return (Criteria) this;
        }

        public Criteria andProductionBetween(Float value1, Float value2) {
            addCriterion("production between", value1, value2, "production");
            return (Criteria) this;
        }

        public Criteria andProductionNotBetween(Float value1, Float value2) {
            addCriterion("production not between", value1, value2, "production");
            return (Criteria) this;
        }

        public Criteria andCoeAIsNull() {
            addCriterion("coe_a is null");
            return (Criteria) this;
        }

        public Criteria andCoeAIsNotNull() {
            addCriterion("coe_a is not null");
            return (Criteria) this;
        }

        public Criteria andCoeAEqualTo(Float value) {
            addCriterion("coe_a =", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeANotEqualTo(Float value) {
            addCriterion("coe_a <>", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeAGreaterThan(Float value) {
            addCriterion("coe_a >", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeAGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_a >=", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeALessThan(Float value) {
            addCriterion("coe_a <", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeALessThanOrEqualTo(Float value) {
            addCriterion("coe_a <=", value, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeAIn(List<Float> values) {
            addCriterion("coe_a in", values, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeANotIn(List<Float> values) {
            addCriterion("coe_a not in", values, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeABetween(Float value1, Float value2) {
            addCriterion("coe_a between", value1, value2, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeANotBetween(Float value1, Float value2) {
            addCriterion("coe_a not between", value1, value2, "coeA");
            return (Criteria) this;
        }

        public Criteria andCoeBIsNull() {
            addCriterion("coe_b is null");
            return (Criteria) this;
        }

        public Criteria andCoeBIsNotNull() {
            addCriterion("coe_b is not null");
            return (Criteria) this;
        }

        public Criteria andCoeBEqualTo(Float value) {
            addCriterion("coe_b =", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBNotEqualTo(Float value) {
            addCriterion("coe_b <>", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBGreaterThan(Float value) {
            addCriterion("coe_b >", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_b >=", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBLessThan(Float value) {
            addCriterion("coe_b <", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBLessThanOrEqualTo(Float value) {
            addCriterion("coe_b <=", value, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBIn(List<Float> values) {
            addCriterion("coe_b in", values, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBNotIn(List<Float> values) {
            addCriterion("coe_b not in", values, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBBetween(Float value1, Float value2) {
            addCriterion("coe_b between", value1, value2, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeBNotBetween(Float value1, Float value2) {
            addCriterion("coe_b not between", value1, value2, "coeB");
            return (Criteria) this;
        }

        public Criteria andCoeCIsNull() {
            addCriterion("coe_c is null");
            return (Criteria) this;
        }

        public Criteria andCoeCIsNotNull() {
            addCriterion("coe_c is not null");
            return (Criteria) this;
        }

        public Criteria andCoeCEqualTo(Float value) {
            addCriterion("coe_c =", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCNotEqualTo(Float value) {
            addCriterion("coe_c <>", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCGreaterThan(Float value) {
            addCriterion("coe_c >", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_c >=", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCLessThan(Float value) {
            addCriterion("coe_c <", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCLessThanOrEqualTo(Float value) {
            addCriterion("coe_c <=", value, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCIn(List<Float> values) {
            addCriterion("coe_c in", values, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCNotIn(List<Float> values) {
            addCriterion("coe_c not in", values, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCBetween(Float value1, Float value2) {
            addCriterion("coe_c between", value1, value2, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeCNotBetween(Float value1, Float value2) {
            addCriterion("coe_c not between", value1, value2, "coeC");
            return (Criteria) this;
        }

        public Criteria andCoeDIsNull() {
            addCriterion("coe_d is null");
            return (Criteria) this;
        }

        public Criteria andCoeDIsNotNull() {
            addCriterion("coe_d is not null");
            return (Criteria) this;
        }

        public Criteria andCoeDEqualTo(Float value) {
            addCriterion("coe_d =", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDNotEqualTo(Float value) {
            addCriterion("coe_d <>", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDGreaterThan(Float value) {
            addCriterion("coe_d >", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_d >=", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDLessThan(Float value) {
            addCriterion("coe_d <", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDLessThanOrEqualTo(Float value) {
            addCriterion("coe_d <=", value, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDIn(List<Float> values) {
            addCriterion("coe_d in", values, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDNotIn(List<Float> values) {
            addCriterion("coe_d not in", values, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDBetween(Float value1, Float value2) {
            addCriterion("coe_d between", value1, value2, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeDNotBetween(Float value1, Float value2) {
            addCriterion("coe_d not between", value1, value2, "coeD");
            return (Criteria) this;
        }

        public Criteria andCoeEIsNull() {
            addCriterion("coe_e is null");
            return (Criteria) this;
        }

        public Criteria andCoeEIsNotNull() {
            addCriterion("coe_e is not null");
            return (Criteria) this;
        }

        public Criteria andCoeEEqualTo(Float value) {
            addCriterion("coe_e =", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeENotEqualTo(Float value) {
            addCriterion("coe_e <>", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeEGreaterThan(Float value) {
            addCriterion("coe_e >", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeEGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_e >=", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeELessThan(Float value) {
            addCriterion("coe_e <", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeELessThanOrEqualTo(Float value) {
            addCriterion("coe_e <=", value, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeEIn(List<Float> values) {
            addCriterion("coe_e in", values, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeENotIn(List<Float> values) {
            addCriterion("coe_e not in", values, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeEBetween(Float value1, Float value2) {
            addCriterion("coe_e between", value1, value2, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeENotBetween(Float value1, Float value2) {
            addCriterion("coe_e not between", value1, value2, "coeE");
            return (Criteria) this;
        }

        public Criteria andCoeFIsNull() {
            addCriterion("coe_f is null");
            return (Criteria) this;
        }

        public Criteria andCoeFIsNotNull() {
            addCriterion("coe_f is not null");
            return (Criteria) this;
        }

        public Criteria andCoeFEqualTo(Float value) {
            addCriterion("coe_f =", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFNotEqualTo(Float value) {
            addCriterion("coe_f <>", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFGreaterThan(Float value) {
            addCriterion("coe_f >", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_f >=", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFLessThan(Float value) {
            addCriterion("coe_f <", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFLessThanOrEqualTo(Float value) {
            addCriterion("coe_f <=", value, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFIn(List<Float> values) {
            addCriterion("coe_f in", values, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFNotIn(List<Float> values) {
            addCriterion("coe_f not in", values, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFBetween(Float value1, Float value2) {
            addCriterion("coe_f between", value1, value2, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeFNotBetween(Float value1, Float value2) {
            addCriterion("coe_f not between", value1, value2, "coeF");
            return (Criteria) this;
        }

        public Criteria andCoeGIsNull() {
            addCriterion("coe_g is null");
            return (Criteria) this;
        }

        public Criteria andCoeGIsNotNull() {
            addCriterion("coe_g is not null");
            return (Criteria) this;
        }

        public Criteria andCoeGEqualTo(Float value) {
            addCriterion("coe_g =", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGNotEqualTo(Float value) {
            addCriterion("coe_g <>", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGGreaterThan(Float value) {
            addCriterion("coe_g >", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGGreaterThanOrEqualTo(Float value) {
            addCriterion("coe_g >=", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGLessThan(Float value) {
            addCriterion("coe_g <", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGLessThanOrEqualTo(Float value) {
            addCriterion("coe_g <=", value, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGIn(List<Float> values) {
            addCriterion("coe_g in", values, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGNotIn(List<Float> values) {
            addCriterion("coe_g not in", values, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGBetween(Float value1, Float value2) {
            addCriterion("coe_g between", value1, value2, "coeG");
            return (Criteria) this;
        }

        public Criteria andCoeGNotBetween(Float value1, Float value2) {
            addCriterion("coe_g not between", value1, value2, "coeG");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated do_not_delete_during_merge Sat Jun 20 18:59:03 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_coefficient_rate
     *
     * @mbggenerated Sat Jun 20 18:59:03 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}