package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class ProcessParametersJqjhPrincipalComponentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public ProcessParametersJqjhPrincipalComponentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Long value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Long value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Long value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Long value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Long value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Long> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Long> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Long value1, Long value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Long value1, Long value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIsNull() {
            addCriterion("process_code is null");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIsNotNull() {
            addCriterion("process_code is not null");
            return (Criteria) this;
        }

        public Criteria andProcessCodeEqualTo(Long value) {
            addCriterion("process_code =", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotEqualTo(Long value) {
            addCriterion("process_code <>", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeGreaterThan(Long value) {
            addCriterion("process_code >", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("process_code >=", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeLessThan(Long value) {
            addCriterion("process_code <", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeLessThanOrEqualTo(Long value) {
            addCriterion("process_code <=", value, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeIn(List<Long> values) {
            addCriterion("process_code in", values, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotIn(List<Long> values) {
            addCriterion("process_code not in", values, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeBetween(Long value1, Long value2) {
            addCriterion("process_code between", value1, value2, "processCode");
            return (Criteria) this;
        }

        public Criteria andProcessCodeNotBetween(Long value1, Long value2) {
            addCriterion("process_code not between", value1, value2, "processCode");
            return (Criteria) this;
        }

        public Criteria andNiMinIsNull() {
            addCriterion("ni_min is null");
            return (Criteria) this;
        }

        public Criteria andNiMinIsNotNull() {
            addCriterion("ni_min is not null");
            return (Criteria) this;
        }

        public Criteria andNiMinEqualTo(Float value) {
            addCriterion("ni_min =", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinNotEqualTo(Float value) {
            addCriterion("ni_min <>", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinGreaterThan(Float value) {
            addCriterion("ni_min >", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinGreaterThanOrEqualTo(Float value) {
            addCriterion("ni_min >=", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinLessThan(Float value) {
            addCriterion("ni_min <", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinLessThanOrEqualTo(Float value) {
            addCriterion("ni_min <=", value, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinIn(List<Float> values) {
            addCriterion("ni_min in", values, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinNotIn(List<Float> values) {
            addCriterion("ni_min not in", values, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinBetween(Float value1, Float value2) {
            addCriterion("ni_min between", value1, value2, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMinNotBetween(Float value1, Float value2) {
            addCriterion("ni_min not between", value1, value2, "niMin");
            return (Criteria) this;
        }

        public Criteria andNiMaxIsNull() {
            addCriterion("ni_max is null");
            return (Criteria) this;
        }

        public Criteria andNiMaxIsNotNull() {
            addCriterion("ni_max is not null");
            return (Criteria) this;
        }

        public Criteria andNiMaxEqualTo(Float value) {
            addCriterion("ni_max =", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxNotEqualTo(Float value) {
            addCriterion("ni_max <>", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxGreaterThan(Float value) {
            addCriterion("ni_max >", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxGreaterThanOrEqualTo(Float value) {
            addCriterion("ni_max >=", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxLessThan(Float value) {
            addCriterion("ni_max <", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxLessThanOrEqualTo(Float value) {
            addCriterion("ni_max <=", value, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxIn(List<Float> values) {
            addCriterion("ni_max in", values, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxNotIn(List<Float> values) {
            addCriterion("ni_max not in", values, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxBetween(Float value1, Float value2) {
            addCriterion("ni_max between", value1, value2, "niMax");
            return (Criteria) this;
        }

        public Criteria andNiMaxNotBetween(Float value1, Float value2) {
            addCriterion("ni_max not between", value1, value2, "niMax");
            return (Criteria) this;
        }

        public Criteria andCoMinIsNull() {
            addCriterion("co_min is null");
            return (Criteria) this;
        }

        public Criteria andCoMinIsNotNull() {
            addCriterion("co_min is not null");
            return (Criteria) this;
        }

        public Criteria andCoMinEqualTo(Float value) {
            addCriterion("co_min =", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinNotEqualTo(Float value) {
            addCriterion("co_min <>", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinGreaterThan(Float value) {
            addCriterion("co_min >", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinGreaterThanOrEqualTo(Float value) {
            addCriterion("co_min >=", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinLessThan(Float value) {
            addCriterion("co_min <", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinLessThanOrEqualTo(Float value) {
            addCriterion("co_min <=", value, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinIn(List<Float> values) {
            addCriterion("co_min in", values, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinNotIn(List<Float> values) {
            addCriterion("co_min not in", values, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinBetween(Float value1, Float value2) {
            addCriterion("co_min between", value1, value2, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMinNotBetween(Float value1, Float value2) {
            addCriterion("co_min not between", value1, value2, "coMin");
            return (Criteria) this;
        }

        public Criteria andCoMaxIsNull() {
            addCriterion("co_max is null");
            return (Criteria) this;
        }

        public Criteria andCoMaxIsNotNull() {
            addCriterion("co_max is not null");
            return (Criteria) this;
        }

        public Criteria andCoMaxEqualTo(Float value) {
            addCriterion("co_max =", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxNotEqualTo(Float value) {
            addCriterion("co_max <>", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxGreaterThan(Float value) {
            addCriterion("co_max >", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxGreaterThanOrEqualTo(Float value) {
            addCriterion("co_max >=", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxLessThan(Float value) {
            addCriterion("co_max <", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxLessThanOrEqualTo(Float value) {
            addCriterion("co_max <=", value, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxIn(List<Float> values) {
            addCriterion("co_max in", values, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxNotIn(List<Float> values) {
            addCriterion("co_max not in", values, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxBetween(Float value1, Float value2) {
            addCriterion("co_max between", value1, value2, "coMax");
            return (Criteria) this;
        }

        public Criteria andCoMaxNotBetween(Float value1, Float value2) {
            addCriterion("co_max not between", value1, value2, "coMax");
            return (Criteria) this;
        }

        public Criteria andMnMinIsNull() {
            addCriterion("mn_min is null");
            return (Criteria) this;
        }

        public Criteria andMnMinIsNotNull() {
            addCriterion("mn_min is not null");
            return (Criteria) this;
        }

        public Criteria andMnMinEqualTo(Float value) {
            addCriterion("mn_min =", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinNotEqualTo(Float value) {
            addCriterion("mn_min <>", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinGreaterThan(Float value) {
            addCriterion("mn_min >", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinGreaterThanOrEqualTo(Float value) {
            addCriterion("mn_min >=", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinLessThan(Float value) {
            addCriterion("mn_min <", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinLessThanOrEqualTo(Float value) {
            addCriterion("mn_min <=", value, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinIn(List<Float> values) {
            addCriterion("mn_min in", values, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinNotIn(List<Float> values) {
            addCriterion("mn_min not in", values, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinBetween(Float value1, Float value2) {
            addCriterion("mn_min between", value1, value2, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMinNotBetween(Float value1, Float value2) {
            addCriterion("mn_min not between", value1, value2, "mnMin");
            return (Criteria) this;
        }

        public Criteria andMnMaxIsNull() {
            addCriterion("mn_max is null");
            return (Criteria) this;
        }

        public Criteria andMnMaxIsNotNull() {
            addCriterion("mn_max is not null");
            return (Criteria) this;
        }

        public Criteria andMnMaxEqualTo(Float value) {
            addCriterion("mn_max =", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxNotEqualTo(Float value) {
            addCriterion("mn_max <>", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxGreaterThan(Float value) {
            addCriterion("mn_max >", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxGreaterThanOrEqualTo(Float value) {
            addCriterion("mn_max >=", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxLessThan(Float value) {
            addCriterion("mn_max <", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxLessThanOrEqualTo(Float value) {
            addCriterion("mn_max <=", value, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxIn(List<Float> values) {
            addCriterion("mn_max in", values, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxNotIn(List<Float> values) {
            addCriterion("mn_max not in", values, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxBetween(Float value1, Float value2) {
            addCriterion("mn_max between", value1, value2, "mnMax");
            return (Criteria) this;
        }

        public Criteria andMnMaxNotBetween(Float value1, Float value2) {
            addCriterion("mn_max not between", value1, value2, "mnMax");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_parameters_JQJH_principal_component
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}