package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class AnodeCostAccountingStatisticByLineDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public AnodeCostAccountingStatisticByLineDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Long value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Long value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Long value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Long value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Long value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Long> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Long> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Long value1, Long value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Long value1, Long value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeIsNull() {
            addCriterion("statistic_code is null");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeIsNotNull() {
            addCriterion("statistic_code is not null");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeEqualTo(Long value) {
            addCriterion("statistic_code =", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeNotEqualTo(Long value) {
            addCriterion("statistic_code <>", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeGreaterThan(Long value) {
            addCriterion("statistic_code >", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("statistic_code >=", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeLessThan(Long value) {
            addCriterion("statistic_code <", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeLessThanOrEqualTo(Long value) {
            addCriterion("statistic_code <=", value, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeIn(List<Long> values) {
            addCriterion("statistic_code in", values, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeNotIn(List<Long> values) {
            addCriterion("statistic_code not in", values, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeBetween(Long value1, Long value2) {
            addCriterion("statistic_code between", value1, value2, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andStatisticCodeNotBetween(Long value1, Long value2) {
            addCriterion("statistic_code not between", value1, value2, "statisticCode");
            return (Criteria) this;
        }

        public Criteria andPeriodsIsNull() {
            addCriterion("periods is null");
            return (Criteria) this;
        }

        public Criteria andPeriodsIsNotNull() {
            addCriterion("periods is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodsEqualTo(Integer value) {
            addCriterion("periods =", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsNotEqualTo(Integer value) {
            addCriterion("periods <>", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsGreaterThan(Integer value) {
            addCriterion("periods >", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsGreaterThanOrEqualTo(Integer value) {
            addCriterion("periods >=", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsLessThan(Integer value) {
            addCriterion("periods <", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsLessThanOrEqualTo(Integer value) {
            addCriterion("periods <=", value, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsIn(List<Integer> values) {
            addCriterion("periods in", values, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsNotIn(List<Integer> values) {
            addCriterion("periods not in", values, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsBetween(Integer value1, Integer value2) {
            addCriterion("periods between", value1, value2, "periods");
            return (Criteria) this;
        }

        public Criteria andPeriodsNotBetween(Integer value1, Integer value2) {
            addCriterion("periods not between", value1, value2, "periods");
            return (Criteria) this;
        }

        public Criteria andLineCoedIsNull() {
            addCriterion("line_coed is null");
            return (Criteria) this;
        }

        public Criteria andLineCoedIsNotNull() {
            addCriterion("line_coed is not null");
            return (Criteria) this;
        }

        public Criteria andLineCoedEqualTo(Integer value) {
            addCriterion("line_coed =", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedNotEqualTo(Integer value) {
            addCriterion("line_coed <>", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedGreaterThan(Integer value) {
            addCriterion("line_coed >", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedGreaterThanOrEqualTo(Integer value) {
            addCriterion("line_coed >=", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedLessThan(Integer value) {
            addCriterion("line_coed <", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedLessThanOrEqualTo(Integer value) {
            addCriterion("line_coed <=", value, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedIn(List<Integer> values) {
            addCriterion("line_coed in", values, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedNotIn(List<Integer> values) {
            addCriterion("line_coed not in", values, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedBetween(Integer value1, Integer value2) {
            addCriterion("line_coed between", value1, value2, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andLineCoedNotBetween(Integer value1, Integer value2) {
            addCriterion("line_coed not between", value1, value2, "lineCoed");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIsNull() {
            addCriterion("type_code is null");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIsNotNull() {
            addCriterion("type_code is not null");
            return (Criteria) this;
        }

        public Criteria andTypeCodeEqualTo(Integer value) {
            addCriterion("type_code =", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotEqualTo(Integer value) {
            addCriterion("type_code <>", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeGreaterThan(Integer value) {
            addCriterion("type_code >", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type_code >=", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeLessThan(Integer value) {
            addCriterion("type_code <", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeLessThanOrEqualTo(Integer value) {
            addCriterion("type_code <=", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIn(List<Integer> values) {
            addCriterion("type_code in", values, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotIn(List<Integer> values) {
            addCriterion("type_code not in", values, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeBetween(Integer value1, Integer value2) {
            addCriterion("type_code between", value1, value2, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("type_code not between", value1, value2, "typeCode");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsIsNull() {
            addCriterion("material_requisitions is null");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsIsNotNull() {
            addCriterion("material_requisitions is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsEqualTo(Float value) {
            addCriterion("material_requisitions =", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsNotEqualTo(Float value) {
            addCriterion("material_requisitions <>", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsGreaterThan(Float value) {
            addCriterion("material_requisitions >", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsGreaterThanOrEqualTo(Float value) {
            addCriterion("material_requisitions >=", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsLessThan(Float value) {
            addCriterion("material_requisitions <", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsLessThanOrEqualTo(Float value) {
            addCriterion("material_requisitions <=", value, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsIn(List<Float> values) {
            addCriterion("material_requisitions in", values, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsNotIn(List<Float> values) {
            addCriterion("material_requisitions not in", values, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsBetween(Float value1, Float value2) {
            addCriterion("material_requisitions between", value1, value2, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialRequisitionsNotBetween(Float value1, Float value2) {
            addCriterion("material_requisitions not between", value1, value2, "materialRequisitions");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceIsNull() {
            addCriterion("material_balance is null");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceIsNotNull() {
            addCriterion("material_balance is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceEqualTo(Float value) {
            addCriterion("material_balance =", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceNotEqualTo(Float value) {
            addCriterion("material_balance <>", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceGreaterThan(Float value) {
            addCriterion("material_balance >", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceGreaterThanOrEqualTo(Float value) {
            addCriterion("material_balance >=", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceLessThan(Float value) {
            addCriterion("material_balance <", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceLessThanOrEqualTo(Float value) {
            addCriterion("material_balance <=", value, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceIn(List<Float> values) {
            addCriterion("material_balance in", values, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceNotIn(List<Float> values) {
            addCriterion("material_balance not in", values, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceBetween(Float value1, Float value2) {
            addCriterion("material_balance between", value1, value2, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andMaterialBalanceNotBetween(Float value1, Float value2) {
            addCriterion("material_balance not between", value1, value2, "materialBalance");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstIsNull() {
            addCriterion("last_material_in_process_first is null");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstIsNotNull() {
            addCriterion("last_material_in_process_first is not null");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstEqualTo(Float value) {
            addCriterion("last_material_in_process_first =", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstNotEqualTo(Float value) {
            addCriterion("last_material_in_process_first <>", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstGreaterThan(Float value) {
            addCriterion("last_material_in_process_first >", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstGreaterThanOrEqualTo(Float value) {
            addCriterion("last_material_in_process_first >=", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstLessThan(Float value) {
            addCriterion("last_material_in_process_first <", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstLessThanOrEqualTo(Float value) {
            addCriterion("last_material_in_process_first <=", value, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstIn(List<Float> values) {
            addCriterion("last_material_in_process_first in", values, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstNotIn(List<Float> values) {
            addCriterion("last_material_in_process_first not in", values, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstBetween(Float value1, Float value2) {
            addCriterion("last_material_in_process_first between", value1, value2, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastMaterialInProcessFirstNotBetween(Float value1, Float value2) {
            addCriterion("last_material_in_process_first not between", value1, value2, "lastMaterialInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstIsNull() {
            addCriterion("current_goods_in_process_first is null");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstIsNotNull() {
            addCriterion("current_goods_in_process_first is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstEqualTo(Float value) {
            addCriterion("current_goods_in_process_first =", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstNotEqualTo(Float value) {
            addCriterion("current_goods_in_process_first <>", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstGreaterThan(Float value) {
            addCriterion("current_goods_in_process_first >", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstGreaterThanOrEqualTo(Float value) {
            addCriterion("current_goods_in_process_first >=", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstLessThan(Float value) {
            addCriterion("current_goods_in_process_first <", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstLessThanOrEqualTo(Float value) {
            addCriterion("current_goods_in_process_first <=", value, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstIn(List<Float> values) {
            addCriterion("current_goods_in_process_first in", values, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstNotIn(List<Float> values) {
            addCriterion("current_goods_in_process_first not in", values, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstBetween(Float value1, Float value2) {
            addCriterion("current_goods_in_process_first between", value1, value2, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessFirstNotBetween(Float value1, Float value2) {
            addCriterion("current_goods_in_process_first not between", value1, value2, "currentGoodsInProcessFirst");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondIsNull() {
            addCriterion("last_goods_in_process_second is null");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondIsNotNull() {
            addCriterion("last_goods_in_process_second is not null");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondEqualTo(Float value) {
            addCriterion("last_goods_in_process_second =", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondNotEqualTo(Float value) {
            addCriterion("last_goods_in_process_second <>", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondGreaterThan(Float value) {
            addCriterion("last_goods_in_process_second >", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondGreaterThanOrEqualTo(Float value) {
            addCriterion("last_goods_in_process_second >=", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondLessThan(Float value) {
            addCriterion("last_goods_in_process_second <", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondLessThanOrEqualTo(Float value) {
            addCriterion("last_goods_in_process_second <=", value, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondIn(List<Float> values) {
            addCriterion("last_goods_in_process_second in", values, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondNotIn(List<Float> values) {
            addCriterion("last_goods_in_process_second not in", values, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondBetween(Float value1, Float value2) {
            addCriterion("last_goods_in_process_second between", value1, value2, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andLastGoodsInProcessSecondNotBetween(Float value1, Float value2) {
            addCriterion("last_goods_in_process_second not between", value1, value2, "lastGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondIsNull() {
            addCriterion("current_goods_in_process_second is null");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondIsNotNull() {
            addCriterion("current_goods_in_process_second is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondEqualTo(Float value) {
            addCriterion("current_goods_in_process_second =", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondNotEqualTo(Float value) {
            addCriterion("current_goods_in_process_second <>", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondGreaterThan(Float value) {
            addCriterion("current_goods_in_process_second >", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondGreaterThanOrEqualTo(Float value) {
            addCriterion("current_goods_in_process_second >=", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondLessThan(Float value) {
            addCriterion("current_goods_in_process_second <", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondLessThanOrEqualTo(Float value) {
            addCriterion("current_goods_in_process_second <=", value, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondIn(List<Float> values) {
            addCriterion("current_goods_in_process_second in", values, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondNotIn(List<Float> values) {
            addCriterion("current_goods_in_process_second not in", values, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondBetween(Float value1, Float value2) {
            addCriterion("current_goods_in_process_second between", value1, value2, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andCurrentGoodsInProcessSecondNotBetween(Float value1, Float value2) {
            addCriterion("current_goods_in_process_second not between", value1, value2, "currentGoodsInProcessSecond");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorIsNull() {
            addCriterion("unit_consumption_precursor is null");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorIsNotNull() {
            addCriterion("unit_consumption_precursor is not null");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorEqualTo(Float value) {
            addCriterion("unit_consumption_precursor =", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorNotEqualTo(Float value) {
            addCriterion("unit_consumption_precursor <>", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorGreaterThan(Float value) {
            addCriterion("unit_consumption_precursor >", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorGreaterThanOrEqualTo(Float value) {
            addCriterion("unit_consumption_precursor >=", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorLessThan(Float value) {
            addCriterion("unit_consumption_precursor <", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorLessThanOrEqualTo(Float value) {
            addCriterion("unit_consumption_precursor <=", value, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorIn(List<Float> values) {
            addCriterion("unit_consumption_precursor in", values, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorNotIn(List<Float> values) {
            addCriterion("unit_consumption_precursor not in", values, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorBetween(Float value1, Float value2) {
            addCriterion("unit_consumption_precursor between", value1, value2, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionPrecursorNotBetween(Float value1, Float value2) {
            addCriterion("unit_consumption_precursor not between", value1, value2, "unitConsumptionPrecursor");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumIsNull() {
            addCriterion("unit_consumption_neurolithium is null");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumIsNotNull() {
            addCriterion("unit_consumption_neurolithium is not null");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumEqualTo(Float value) {
            addCriterion("unit_consumption_neurolithium =", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumNotEqualTo(Float value) {
            addCriterion("unit_consumption_neurolithium <>", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumGreaterThan(Float value) {
            addCriterion("unit_consumption_neurolithium >", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumGreaterThanOrEqualTo(Float value) {
            addCriterion("unit_consumption_neurolithium >=", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumLessThan(Float value) {
            addCriterion("unit_consumption_neurolithium <", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumLessThanOrEqualTo(Float value) {
            addCriterion("unit_consumption_neurolithium <=", value, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumIn(List<Float> values) {
            addCriterion("unit_consumption_neurolithium in", values, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumNotIn(List<Float> values) {
            addCriterion("unit_consumption_neurolithium not in", values, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumBetween(Float value1, Float value2) {
            addCriterion("unit_consumption_neurolithium between", value1, value2, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andUnitConsumptionNeurolithiumNotBetween(Float value1, Float value2) {
            addCriterion("unit_consumption_neurolithium not between", value1, value2, "unitConsumptionNeurolithium");
            return (Criteria) this;
        }

        public Criteria andProductStorageIsNull() {
            addCriterion("product_storage is null");
            return (Criteria) this;
        }

        public Criteria andProductStorageIsNotNull() {
            addCriterion("product_storage is not null");
            return (Criteria) this;
        }

        public Criteria andProductStorageEqualTo(Float value) {
            addCriterion("product_storage =", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageNotEqualTo(Float value) {
            addCriterion("product_storage <>", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageGreaterThan(Float value) {
            addCriterion("product_storage >", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageGreaterThanOrEqualTo(Float value) {
            addCriterion("product_storage >=", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageLessThan(Float value) {
            addCriterion("product_storage <", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageLessThanOrEqualTo(Float value) {
            addCriterion("product_storage <=", value, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageIn(List<Float> values) {
            addCriterion("product_storage in", values, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageNotIn(List<Float> values) {
            addCriterion("product_storage not in", values, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageBetween(Float value1, Float value2) {
            addCriterion("product_storage between", value1, value2, "productStorage");
            return (Criteria) this;
        }

        public Criteria andProductStorageNotBetween(Float value1, Float value2) {
            addCriterion("product_storage not between", value1, value2, "productStorage");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table anode_cost_accounting_statistic_by_line_detail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}