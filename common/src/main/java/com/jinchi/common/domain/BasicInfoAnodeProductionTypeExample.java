package com.jinchi.common.domain;

import java.util.ArrayList;
import java.util.List;

public class BasicInfoAnodeProductionTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public BasicInfoAnodeProductionTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsIsNull() {
            addCriterion("matching_coefficient_precursors is null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsIsNotNull() {
            addCriterion("matching_coefficient_precursors is not null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsEqualTo(Float value) {
            addCriterion("matching_coefficient_precursors =", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsNotEqualTo(Float value) {
            addCriterion("matching_coefficient_precursors <>", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsGreaterThan(Float value) {
            addCriterion("matching_coefficient_precursors >", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsGreaterThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_precursors >=", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsLessThan(Float value) {
            addCriterion("matching_coefficient_precursors <", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsLessThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_precursors <=", value, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsIn(List<Float> values) {
            addCriterion("matching_coefficient_precursors in", values, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsNotIn(List<Float> values) {
            addCriterion("matching_coefficient_precursors not in", values, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_precursors between", value1, value2, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientPrecursorsNotBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_precursors not between", value1, value2, "matchingCoefficientPrecursors");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateIsNull() {
            addCriterion("matching_coefficient_lithium_carbonate is null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateIsNotNull() {
            addCriterion("matching_coefficient_lithium_carbonate is not null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate =", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateNotEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate <>", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateGreaterThan(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate >", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateGreaterThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate >=", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateLessThan(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate <", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateLessThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_carbonate <=", value, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateIn(List<Float> values) {
            addCriterion("matching_coefficient_lithium_carbonate in", values, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateNotIn(List<Float> values) {
            addCriterion("matching_coefficient_lithium_carbonate not in", values, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_lithium_carbonate between", value1, value2, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumCarbonateNotBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_lithium_carbonate not between", value1, value2, "matchingCoefficientLithiumCarbonate");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhIsNull() {
            addCriterion("matching_coefficient_lithium_oh is null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhIsNotNull() {
            addCriterion("matching_coefficient_lithium_oh is not null");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_oh =", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhNotEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_oh <>", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhGreaterThan(Float value) {
            addCriterion("matching_coefficient_lithium_oh >", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhGreaterThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_oh >=", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhLessThan(Float value) {
            addCriterion("matching_coefficient_lithium_oh <", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhLessThanOrEqualTo(Float value) {
            addCriterion("matching_coefficient_lithium_oh <=", value, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhIn(List<Float> values) {
            addCriterion("matching_coefficient_lithium_oh in", values, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhNotIn(List<Float> values) {
            addCriterion("matching_coefficient_lithium_oh not in", values, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_lithium_oh between", value1, value2, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }

        public Criteria andMatchingCoefficientLithiumOhNotBetween(Float value1, Float value2) {
            addCriterion("matching_coefficient_lithium_oh not between", value1, value2, "matchingCoefficientLithiumOh");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 29 17:07:39 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table basic_info_anode_production_type
     *
     * @mbggenerated Sun Mar 29 17:07:39 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}