package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoDeviceBatchProcessMap;
import com.jinchi.common.domain.BasicInfoDeviceBatchProcessMapExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoDeviceBatchProcessMapMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoDeviceBatchProcessMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoDeviceBatchProcessMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_device_batch_process_map",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_device_batch_process_map (process_code, rule_detail_code, ",
        "rule_value)",
        "values (#{processCode,jdbcType=SMALLINT}, #{ruleDetailCode,jdbcType=SMALLINT}, ",
        "#{ruleValue,jdbcType=CHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Long.class)
    int insert(BasicInfoDeviceBatchProcessMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoDeviceBatchProcessMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    List<BasicInfoDeviceBatchProcessMap> selectByExample(BasicInfoDeviceBatchProcessMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, process_code, rule_detail_code, rule_value",
        "from basic_info_device_batch_process_map",
        "where code = #{code,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoDeviceBatchProcessMap selectByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoDeviceBatchProcessMap record, @Param("example") BasicInfoDeviceBatchProcessMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoDeviceBatchProcessMap record, @Param("example") BasicInfoDeviceBatchProcessMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoDeviceBatchProcessMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_device_batch_process_map
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_device_batch_process_map",
        "set process_code = #{processCode,jdbcType=SMALLINT},",
          "rule_detail_code = #{ruleDetailCode,jdbcType=SMALLINT},",
          "rule_value = #{ruleValue,jdbcType=CHAR}",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BasicInfoDeviceBatchProcessMap record);
}