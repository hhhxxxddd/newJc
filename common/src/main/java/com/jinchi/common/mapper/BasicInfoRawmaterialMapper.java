package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoRawmaterial;
import com.jinchi.common.domain.BasicInfoRawmaterialExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoRawmaterialMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoRawmaterialExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoRawmaterialExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_rawmaterial",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_rawmaterial (material_name, data_type, ",
        "phase_type, picking_type, ",
        "types_code, ni_flag, co_flag, ",
        "mn_flag)",
        "values (#{materialName,jdbcType=VARCHAR}, #{dataType,jdbcType=TINYINT}, ",
        "#{phaseType,jdbcType=TINYINT}, #{pickingType,jdbcType=TINYINT}, ",
        "#{typesCode,jdbcType=INTEGER}, #{niFlag,jdbcType=BIT}, #{coFlag,jdbcType=BIT}, ",
        "#{mnFlag,jdbcType=BIT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Integer.class)
    int insert(BasicInfoRawmaterial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoRawmaterial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    List<BasicInfoRawmaterial> selectByExample(BasicInfoRawmaterialExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, material_name, data_type, phase_type, picking_type, types_code, ni_flag, ",
        "co_flag, mn_flag",
        "from basic_info_rawmaterial",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoRawmaterial selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoRawmaterial record, @Param("example") BasicInfoRawmaterialExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoRawmaterial record, @Param("example") BasicInfoRawmaterialExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoRawmaterial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_rawmaterial
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_rawmaterial",
        "set material_name = #{materialName,jdbcType=VARCHAR},",
          "data_type = #{dataType,jdbcType=TINYINT},",
          "phase_type = #{phaseType,jdbcType=TINYINT},",
          "picking_type = #{pickingType,jdbcType=TINYINT},",
          "types_code = #{typesCode,jdbcType=INTEGER},",
          "ni_flag = #{niFlag,jdbcType=BIT},",
          "co_flag = #{coFlag,jdbcType=BIT},",
          "mn_flag = #{mnFlag,jdbcType=BIT}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BasicInfoRawmaterial record);
}