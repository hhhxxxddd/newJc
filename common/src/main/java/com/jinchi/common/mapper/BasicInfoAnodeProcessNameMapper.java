package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoAnodeProcessName;
import com.jinchi.common.domain.BasicInfoAnodeProcessNameExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoAnodeProcessNameMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoAnodeProcessNameExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoAnodeProcessNameExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_anode_process_name",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_anode_process_name (process_name)",
        "values (#{processName,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Integer.class)
    int insert(BasicInfoAnodeProcessName record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoAnodeProcessName record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    List<BasicInfoAnodeProcessName> selectByExample(BasicInfoAnodeProcessNameExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, process_name",
        "from basic_info_anode_process_name",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoAnodeProcessName selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoAnodeProcessName record, @Param("example") BasicInfoAnodeProcessNameExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoAnodeProcessName record, @Param("example") BasicInfoAnodeProcessNameExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoAnodeProcessName record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_anode_process_name
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_anode_process_name",
        "set process_name = #{processName,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BasicInfoAnodeProcessName record);
}