package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoPrecursorMaterialDetails;
import com.jinchi.common.domain.BasicInfoPrecursorMaterialDetailsExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoPrecursorMaterialDetailsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoPrecursorMaterialDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoPrecursorMaterialDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_precursor_material_details",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_precursor_material_details (material_name, data_type, ",
        "value_type, types, ",
        "process_code, Mn, ",
        "Ni, Co, ammonia_flag, ",
        "alkali_flag)",
        "values (#{materialName,jdbcType=VARCHAR}, #{dataType,jdbcType=TINYINT}, ",
        "#{valueType,jdbcType=TINYINT}, #{types,jdbcType=TINYINT}, ",
        "#{processCode,jdbcType=INTEGER}, #{mn,jdbcType=TINYINT}, ",
        "#{ni,jdbcType=TINYINT}, #{co,jdbcType=TINYINT}, #{ammoniaFlag,jdbcType=TINYINT}, ",
        "#{alkaliFlag,jdbcType=TINYINT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Integer.class)
    int insert(BasicInfoPrecursorMaterialDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoPrecursorMaterialDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    List<BasicInfoPrecursorMaterialDetails> selectByExample(BasicInfoPrecursorMaterialDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, material_name, data_type, value_type, types, process_code, Mn, Ni, Co, ",
        "ammonia_flag, alkali_flag",
        "from basic_info_precursor_material_details",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoPrecursorMaterialDetails selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoPrecursorMaterialDetails record, @Param("example") BasicInfoPrecursorMaterialDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoPrecursorMaterialDetails record, @Param("example") BasicInfoPrecursorMaterialDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoPrecursorMaterialDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_details
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_precursor_material_details",
        "set material_name = #{materialName,jdbcType=VARCHAR},",
          "data_type = #{dataType,jdbcType=TINYINT},",
          "value_type = #{valueType,jdbcType=TINYINT},",
          "types = #{types,jdbcType=TINYINT},",
          "process_code = #{processCode,jdbcType=INTEGER},",
          "Mn = #{mn,jdbcType=TINYINT},",
          "Ni = #{ni,jdbcType=TINYINT},",
          "Co = #{co,jdbcType=TINYINT},",
          "ammonia_flag = #{ammoniaFlag,jdbcType=TINYINT},",
          "alkali_flag = #{alkaliFlag,jdbcType=TINYINT}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BasicInfoPrecursorMaterialDetails record);
}