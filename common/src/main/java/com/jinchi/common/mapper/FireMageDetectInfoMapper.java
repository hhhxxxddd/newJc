package com.jinchi.common.mapper;

import com.jinchi.common.domain.FireMageDetectInfo;
import com.jinchi.common.domain.FireMageDetectInfoExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;

@Mapper
@Component
public interface FireMageDetectInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int countByExample(FireMageDetectInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int deleteByExample(FireMageDetectInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    @Delete({
        "delete from fire_mage_detect_info",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    @Insert({
        "insert into fire_mage_detect_info (batch, process, ",
        "dev1, dev2, product, ",
        "year, month, day, ",
        "line, unit, stream, ",
        "other, dept_code, ",
        "deliery_people, check_in_time, ",
        "comfirm_time, flag, ",
        "detect_status, comment)",
        "values (#{batch,jdbcType=VARCHAR}, #{process,jdbcType=VARCHAR}, ",
        "#{dev1,jdbcType=VARCHAR}, #{dev2,jdbcType=VARCHAR}, #{product,jdbcType=VARCHAR}, ",
        "#{year,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR}, #{day,jdbcType=VARCHAR}, ",
        "#{line,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{stream,jdbcType=VARCHAR}, ",
        "#{other,jdbcType=VARCHAR}, #{deptCode,jdbcType=INTEGER}, ",
        "#{delieryPeople,jdbcType=VARCHAR}, #{checkInTime,jdbcType=TIMESTAMP}, ",
        "#{comfirmTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT}, ",
        "#{detectStatus,jdbcType=TINYINT}, #{comment,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Long.class)
    int insert(FireMageDetectInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int insertSelective(FireMageDetectInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    List<FireMageDetectInfo> selectByExample(FireMageDetectInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, batch, process, dev1, dev2, product, year, month, day, line, unit, stream, ",
        "other, dept_code, deliery_people, check_in_time, comfirm_time, flag, detect_status, ",
        "comment",
        "from fire_mage_detect_info",
        "where code = #{code,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    FireMageDetectInfo selectByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") FireMageDetectInfo record, @Param("example") FireMageDetectInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") FireMageDetectInfo record, @Param("example") FireMageDetectInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(FireMageDetectInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_mage_detect_info
     *
     * @mbggenerated
     */
    @Update({
        "update fire_mage_detect_info",
        "set batch = #{batch,jdbcType=VARCHAR},",
          "process = #{process,jdbcType=VARCHAR},",
          "dev1 = #{dev1,jdbcType=VARCHAR},",
          "dev2 = #{dev2,jdbcType=VARCHAR},",
          "product = #{product,jdbcType=VARCHAR},",
          "year = #{year,jdbcType=VARCHAR},",
          "month = #{month,jdbcType=VARCHAR},",
          "day = #{day,jdbcType=VARCHAR},",
          "line = #{line,jdbcType=VARCHAR},",
          "unit = #{unit,jdbcType=VARCHAR},",
          "stream = #{stream,jdbcType=VARCHAR},",
          "other = #{other,jdbcType=VARCHAR},",
          "dept_code = #{deptCode,jdbcType=INTEGER},",
          "deliery_people = #{delieryPeople,jdbcType=VARCHAR},",
          "check_in_time = #{checkInTime,jdbcType=TIMESTAMP},",
          "comfirm_time = #{comfirmTime,jdbcType=TIMESTAMP},",
          "flag = #{flag,jdbcType=TINYINT},",
          "detect_status = #{detectStatus,jdbcType=TINYINT},",
          "comment = #{comment,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(FireMageDetectInfo record);

    List<FireMageDetectInfo> selectByCondition(@Param("sql")String sql);

    List<FireMageDetectInfo> selectByTime(@Param("sql")String sql);

    FireMageDetectInfo getByBatch(@Param("batch") String batch);

    List<FireMageDetectInfo> select(@Param("deptCode") Integer deptCode,
                                    @Param("process") String process,
                                    @Param("product") String product,
                                    @Param("start") String start,
                                    @Param("end") String end,
                                    @Param("p1") Integer p1,
                                    @Param("p2") Integer p2);

    Integer count(@Param("deptCode") Integer deptCode,
                  @Param("process") String process,
                  @Param("product") String product,
                  @Param("start") String start,
                  @Param("end") String end);

}