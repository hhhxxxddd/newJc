package com.jinchi.common.mapper;

import com.jinchi.common.domain.ProductionInstrumentAddress;
import com.jinchi.common.domain.ProductionInstrumentAddressExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;

@Mapper
@Component
public interface ProductionInstrumentAddressMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int countByExample(ProductionInstrumentAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int deleteByExample(ProductionInstrumentAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    @Delete({
        "delete from production_instrument_address",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    @Insert({
        "insert into production_instrument_address (name, address)",
        "values (#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Integer.class)
    int insert(ProductionInstrumentAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int insertSelective(ProductionInstrumentAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    List<ProductionInstrumentAddress> selectByExample(ProductionInstrumentAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, name, address",
        "from production_instrument_address",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    ProductionInstrumentAddress selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ProductionInstrumentAddress record, @Param("example") ProductionInstrumentAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ProductionInstrumentAddress record, @Param("example") ProductionInstrumentAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ProductionInstrumentAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_address
     *
     * @mbggenerated
     */
    @Update({
        "update production_instrument_address",
        "set name = #{name,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ProductionInstrumentAddress record);
}