package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoPrecursorProductionLine;
import com.jinchi.common.domain.BasicInfoPrecursorProductionLineExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoPrecursorProductionLineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoPrecursorProductionLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoPrecursorProductionLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_precursor_production_line",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_precursor_production_line (code, name)",
        "values (#{code,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})"
    })
    int insert(BasicInfoPrecursorProductionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoPrecursorProductionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    List<BasicInfoPrecursorProductionLine> selectByExample(BasicInfoPrecursorProductionLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, name",
        "from basic_info_precursor_production_line",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoPrecursorProductionLine selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoPrecursorProductionLine record, @Param("example") BasicInfoPrecursorProductionLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoPrecursorProductionLine record, @Param("example") BasicInfoPrecursorProductionLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoPrecursorProductionLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_production_line
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_precursor_production_line",
        "set name = #{name,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BasicInfoPrecursorProductionLine record);
}