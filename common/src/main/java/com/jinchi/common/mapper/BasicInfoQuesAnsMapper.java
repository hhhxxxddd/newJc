package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoQuesAns;
import com.jinchi.common.domain.BasicInfoQuesAnsExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoQuesAnsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoQuesAnsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoQuesAnsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_ques_ans",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_ques_ans (question_area, question, ",
        "answer)",
        "values (#{questionArea,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, ",
        "#{answer,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Long.class)
    int insert(BasicInfoQuesAns record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoQuesAns record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    List<BasicInfoQuesAns> selectByExample(BasicInfoQuesAnsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, question_area, question, answer",
        "from basic_info_ques_ans",
        "where code = #{code,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoQuesAns selectByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoQuesAns record, @Param("example") BasicInfoQuesAnsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoQuesAns record, @Param("example") BasicInfoQuesAnsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoQuesAns record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_ques_ans
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_ques_ans",
        "set question_area = #{questionArea,jdbcType=VARCHAR},",
          "question = #{question,jdbcType=VARCHAR},",
          "answer = #{answer,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BasicInfoQuesAns record);

    List<BasicInfoQuesAns> selectByCondition(@Param("sql") String sql);
}