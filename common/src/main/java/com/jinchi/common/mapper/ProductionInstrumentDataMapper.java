package com.jinchi.common.mapper;

import com.jinchi.common.domain.ProductionInstrumentData;
import com.jinchi.common.domain.ProductionInstrumentDataExample;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;
@Component
@Mapper
public interface ProductionInstrumentDataMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    int countByExample(ProductionInstrumentDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    int deleteByExample(ProductionInstrumentDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    @Insert({
        "insert into production_instrument_data (code, cell_num, ",
        "sample_time, ph_value, ",
        "temperature, salt_flow1, ",
        "salt_flow2, salt_flow3, ",
        "salt_flow4, ammonia_bases1, ",
        "ammonia_bases2, ammonia_water, ",
        "ammonia_gas, solid_containing_content, ",
        "transducer_show, measured_3c)",
        "values (#{code,jdbcType=BIGINT}, #{cellNum,jdbcType=VARCHAR}, ",
        "#{sampleTime,jdbcType=TIMESTAMP}, #{phValue,jdbcType=REAL}, ",
        "#{temperature,jdbcType=REAL}, #{saltFlow1,jdbcType=REAL}, ",
        "#{saltFlow2,jdbcType=REAL}, #{saltFlow3,jdbcType=REAL}, ",
        "#{saltFlow4,jdbcType=REAL}, #{ammoniaBases1,jdbcType=REAL}, ",
        "#{ammoniaBases2,jdbcType=REAL}, #{ammoniaWater,jdbcType=REAL}, ",
        "#{ammoniaGas,jdbcType=REAL}, #{solidContainingContent,jdbcType=REAL}, ",
        "#{transducerShow,jdbcType=REAL}, #{measured3c,jdbcType=REAL})"
    })
    int insert(ProductionInstrumentData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    int insertSelective(ProductionInstrumentData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    List<ProductionInstrumentData> selectByExample(ProductionInstrumentDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ProductionInstrumentData record, @Param("example") ProductionInstrumentDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table production_instrument_data
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ProductionInstrumentData record, @Param("example") ProductionInstrumentDataExample example);
}