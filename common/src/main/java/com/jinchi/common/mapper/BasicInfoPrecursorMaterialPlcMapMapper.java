package com.jinchi.common.mapper;

import com.jinchi.common.domain.BasicInfoPrecursorMaterialPlcMap;
import com.jinchi.common.domain.BasicInfoPrecursorMaterialPlcMapExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface BasicInfoPrecursorMaterialPlcMapMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int countByExample(BasicInfoPrecursorMaterialPlcMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int deleteByExample(BasicInfoPrecursorMaterialPlcMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    @Delete({
        "delete from basic_info_precursor_material_PLC_map",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    @Insert({
        "insert into basic_info_precursor_material_PLC_map (code, material_code, ",
        "plc_code)",
        "values (#{code,jdbcType=INTEGER}, #{materialCode,jdbcType=INTEGER}, ",
        "#{plcCode,jdbcType=INTEGER})"
    })
    int insert(BasicInfoPrecursorMaterialPlcMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int insertSelective(BasicInfoPrecursorMaterialPlcMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    List<BasicInfoPrecursorMaterialPlcMap> selectByExample(BasicInfoPrecursorMaterialPlcMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, material_code, plc_code",
        "from basic_info_precursor_material_PLC_map",
        "where code = #{code,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    BasicInfoPrecursorMaterialPlcMap selectByPrimaryKey(Integer code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BasicInfoPrecursorMaterialPlcMap record, @Param("example") BasicInfoPrecursorMaterialPlcMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BasicInfoPrecursorMaterialPlcMap record, @Param("example") BasicInfoPrecursorMaterialPlcMapExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BasicInfoPrecursorMaterialPlcMap record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table basic_info_precursor_material_PLC_map
     *
     * @mbggenerated
     */
    @Update({
        "update basic_info_precursor_material_PLC_map",
        "set material_code = #{materialCode,jdbcType=INTEGER},",
          "plc_code = #{plcCode,jdbcType=INTEGER}",
        "where code = #{code,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BasicInfoPrecursorMaterialPlcMap record);

    List selectByconditions(@Param("sql") String sql);
}