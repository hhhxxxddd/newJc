package com.jinchi.common.mapper;

import com.jinchi.common.domain.ProcessParametersXdDetail;
import com.jinchi.common.domain.ProcessParametersXdDetailExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface ProcessParametersXdDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int countByExample(ProcessParametersXdDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int deleteByExample(ProcessParametersXdDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    @Delete({
        "delete from process_parameters_XD_detail",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    @Insert({
        "insert into process_parameters_XD_detail (process_code, production_code, ",
        "comment)",
        "values (#{processCode,jdbcType=BIGINT}, #{productionCode,jdbcType=SMALLINT}, ",
        "#{comment,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Long.class)
    int insert(ProcessParametersXdDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int insertSelective(ProcessParametersXdDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    List<ProcessParametersXdDetail> selectByExample(ProcessParametersXdDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, process_code, production_code, comment",
        "from process_parameters_XD_detail",
        "where code = #{code,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    ProcessParametersXdDetail selectByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ProcessParametersXdDetail record, @Param("example") ProcessParametersXdDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ProcessParametersXdDetail record, @Param("example") ProcessParametersXdDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ProcessParametersXdDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_XD_detail
     *
     * @mbggenerated
     */
    @Update({
        "update process_parameters_XD_detail",
        "set process_code = #{processCode,jdbcType=BIGINT},",
          "production_code = #{productionCode,jdbcType=SMALLINT},",
          "comment = #{comment,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(ProcessParametersXdDetail record);
}