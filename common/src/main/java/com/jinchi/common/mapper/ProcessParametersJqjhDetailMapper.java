package com.jinchi.common.mapper;

import com.jinchi.common.domain.ProcessParametersJqjhDetail;
import com.jinchi.common.domain.ProcessParametersJqjhDetailExample;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;
@Mapper
@Component
public interface ProcessParametersJqjhDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int countByExample(ProcessParametersJqjhDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int deleteByExample(ProcessParametersJqjhDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    @Delete({
        "delete from process_parameters_JQJH_detail",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    @Insert({
        "insert into process_parameters_JQJH_detail (process_code, production_code, ",
        "zr_standard, zr_bias, ",
        "ca, mg, fe, ",
        "zn, cd, high_standard, ",
        "high_bias, temperature_standard, ",
        "temperature_bias, stir_time_standard, ",
        "stir_time_bias, comment)",
        "values (#{processCode,jdbcType=BIGINT}, #{productionCode,jdbcType=SMALLINT}, ",
        "#{zrStandard,jdbcType=INTEGER}, #{zrBias,jdbcType=INTEGER}, ",
        "#{ca,jdbcType=VARCHAR}, #{mg,jdbcType=VARCHAR}, #{fe,jdbcType=VARCHAR}, ",
        "#{zn,jdbcType=VARCHAR}, #{cd,jdbcType=VARCHAR}, #{highStandard,jdbcType=INTEGER}, ",
        "#{highBias,jdbcType=INTEGER}, #{temperatureStandard,jdbcType=INTEGER}, ",
        "#{temperatureBias,jdbcType=INTEGER}, #{stirTimeStandard,jdbcType=INTEGER}, ",
        "#{stirTimeBias,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="code", before=false, resultType=Long.class)
    int insert(ProcessParametersJqjhDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int insertSelective(ProcessParametersJqjhDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    List<ProcessParametersJqjhDetail> selectByExample(ProcessParametersJqjhDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "code, process_code, production_code, zr_standard, zr_bias, ca, mg, fe, zn, cd, ",
        "high_standard, high_bias, temperature_standard, temperature_bias, stir_time_standard, ",
        "stir_time_bias, comment",
        "from process_parameters_JQJH_detail",
        "where code = #{code,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    ProcessParametersJqjhDetail selectByPrimaryKey(Long code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ProcessParametersJqjhDetail record, @Param("example") ProcessParametersJqjhDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ProcessParametersJqjhDetail record, @Param("example") ProcessParametersJqjhDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ProcessParametersJqjhDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_parameters_JQJH_detail
     *
     * @mbggenerated
     */
    @Update({
        "update process_parameters_JQJH_detail",
        "set process_code = #{processCode,jdbcType=BIGINT},",
          "production_code = #{productionCode,jdbcType=SMALLINT},",
          "zr_standard = #{zrStandard,jdbcType=INTEGER},",
          "zr_bias = #{zrBias,jdbcType=INTEGER},",
          "ca = #{ca,jdbcType=VARCHAR},",
          "mg = #{mg,jdbcType=VARCHAR},",
          "fe = #{fe,jdbcType=VARCHAR},",
          "zn = #{zn,jdbcType=VARCHAR},",
          "cd = #{cd,jdbcType=VARCHAR},",
          "high_standard = #{highStandard,jdbcType=INTEGER},",
          "high_bias = #{highBias,jdbcType=INTEGER},",
          "temperature_standard = #{temperatureStandard,jdbcType=INTEGER},",
          "temperature_bias = #{temperatureBias,jdbcType=INTEGER},",
          "stir_time_standard = #{stirTimeStandard,jdbcType=INTEGER},",
          "stir_time_bias = #{stirTimeBias,jdbcType=INTEGER},",
          "comment = #{comment,jdbcType=VARCHAR}",
        "where code = #{code,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(ProcessParametersJqjhDetail record);
}